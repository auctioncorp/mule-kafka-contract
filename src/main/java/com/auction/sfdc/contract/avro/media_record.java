/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.auction.sfdc.contract.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class media_record extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 3008831876141534786L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"media_record\",\"namespace\":\"com.auction.sfdc.contract.avro\",\"fields\":[{\"name\":\"created_date\",\"type\":\"int\",\"logicalType\":\"date\"},{\"name\":\"updated_date\",\"type\":\"int\",\"logicalType\":\"date\"},{\"name\":\"created_by\",\"type\":\"int\"},{\"name\":\"updated_by\",\"type\":\"int\"},{\"name\":\"media_id\",\"type\":\"int\"},{\"name\":\"media_uri\",\"type\":\"string\"},{\"name\":\"download_uri\",\"type\":\"string\"},{\"name\":\"internal_title\",\"type\":\"string\"},{\"name\":\"file_name\",\"type\":\"string\"},{\"name\":\"content_type\",\"type\":\"string\"},{\"name\":\"media_type\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<media_record> ENCODER =
      new BinaryMessageEncoder<media_record>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<media_record> DECODER =
      new BinaryMessageDecoder<media_record>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<media_record> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<media_record> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<media_record> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<media_record>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this media_record to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a media_record from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a media_record instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static media_record fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private int created_date;
   private int updated_date;
   private int created_by;
   private int updated_by;
   private int media_id;
   private java.lang.CharSequence media_uri;
   private java.lang.CharSequence download_uri;
   private java.lang.CharSequence internal_title;
   private java.lang.CharSequence file_name;
   private java.lang.CharSequence content_type;
   private java.lang.CharSequence media_type;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public media_record() {}

  /**
   * All-args constructor.
   * @param created_date The new value for created_date
   * @param updated_date The new value for updated_date
   * @param created_by The new value for created_by
   * @param updated_by The new value for updated_by
   * @param media_id The new value for media_id
   * @param media_uri The new value for media_uri
   * @param download_uri The new value for download_uri
   * @param internal_title The new value for internal_title
   * @param file_name The new value for file_name
   * @param content_type The new value for content_type
   * @param media_type The new value for media_type
   */
  public media_record(java.lang.Integer created_date, java.lang.Integer updated_date, java.lang.Integer created_by, java.lang.Integer updated_by, java.lang.Integer media_id, java.lang.CharSequence media_uri, java.lang.CharSequence download_uri, java.lang.CharSequence internal_title, java.lang.CharSequence file_name, java.lang.CharSequence content_type, java.lang.CharSequence media_type) {
    this.created_date = created_date;
    this.updated_date = updated_date;
    this.created_by = created_by;
    this.updated_by = updated_by;
    this.media_id = media_id;
    this.media_uri = media_uri;
    this.download_uri = download_uri;
    this.internal_title = internal_title;
    this.file_name = file_name;
    this.content_type = content_type;
    this.media_type = media_type;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return created_date;
    case 1: return updated_date;
    case 2: return created_by;
    case 3: return updated_by;
    case 4: return media_id;
    case 5: return media_uri;
    case 6: return download_uri;
    case 7: return internal_title;
    case 8: return file_name;
    case 9: return content_type;
    case 10: return media_type;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: created_date = (java.lang.Integer)value$; break;
    case 1: updated_date = (java.lang.Integer)value$; break;
    case 2: created_by = (java.lang.Integer)value$; break;
    case 3: updated_by = (java.lang.Integer)value$; break;
    case 4: media_id = (java.lang.Integer)value$; break;
    case 5: media_uri = (java.lang.CharSequence)value$; break;
    case 6: download_uri = (java.lang.CharSequence)value$; break;
    case 7: internal_title = (java.lang.CharSequence)value$; break;
    case 8: file_name = (java.lang.CharSequence)value$; break;
    case 9: content_type = (java.lang.CharSequence)value$; break;
    case 10: media_type = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'created_date' field.
   * @return The value of the 'created_date' field.
   */
  public int getCreatedDate() {
    return created_date;
  }


  /**
   * Sets the value of the 'created_date' field.
   * @param value the value to set.
   */
  public void setCreatedDate(int value) {
    this.created_date = value;
  }

  /**
   * Gets the value of the 'updated_date' field.
   * @return The value of the 'updated_date' field.
   */
  public int getUpdatedDate() {
    return updated_date;
  }


  /**
   * Sets the value of the 'updated_date' field.
   * @param value the value to set.
   */
  public void setUpdatedDate(int value) {
    this.updated_date = value;
  }

  /**
   * Gets the value of the 'created_by' field.
   * @return The value of the 'created_by' field.
   */
  public int getCreatedBy() {
    return created_by;
  }


  /**
   * Sets the value of the 'created_by' field.
   * @param value the value to set.
   */
  public void setCreatedBy(int value) {
    this.created_by = value;
  }

  /**
   * Gets the value of the 'updated_by' field.
   * @return The value of the 'updated_by' field.
   */
  public int getUpdatedBy() {
    return updated_by;
  }


  /**
   * Sets the value of the 'updated_by' field.
   * @param value the value to set.
   */
  public void setUpdatedBy(int value) {
    this.updated_by = value;
  }

  /**
   * Gets the value of the 'media_id' field.
   * @return The value of the 'media_id' field.
   */
  public int getMediaId() {
    return media_id;
  }


  /**
   * Sets the value of the 'media_id' field.
   * @param value the value to set.
   */
  public void setMediaId(int value) {
    this.media_id = value;
  }

  /**
   * Gets the value of the 'media_uri' field.
   * @return The value of the 'media_uri' field.
   */
  public java.lang.CharSequence getMediaUri() {
    return media_uri;
  }


  /**
   * Sets the value of the 'media_uri' field.
   * @param value the value to set.
   */
  public void setMediaUri(java.lang.CharSequence value) {
    this.media_uri = value;
  }

  /**
   * Gets the value of the 'download_uri' field.
   * @return The value of the 'download_uri' field.
   */
  public java.lang.CharSequence getDownloadUri() {
    return download_uri;
  }


  /**
   * Sets the value of the 'download_uri' field.
   * @param value the value to set.
   */
  public void setDownloadUri(java.lang.CharSequence value) {
    this.download_uri = value;
  }

  /**
   * Gets the value of the 'internal_title' field.
   * @return The value of the 'internal_title' field.
   */
  public java.lang.CharSequence getInternalTitle() {
    return internal_title;
  }


  /**
   * Sets the value of the 'internal_title' field.
   * @param value the value to set.
   */
  public void setInternalTitle(java.lang.CharSequence value) {
    this.internal_title = value;
  }

  /**
   * Gets the value of the 'file_name' field.
   * @return The value of the 'file_name' field.
   */
  public java.lang.CharSequence getFileName() {
    return file_name;
  }


  /**
   * Sets the value of the 'file_name' field.
   * @param value the value to set.
   */
  public void setFileName(java.lang.CharSequence value) {
    this.file_name = value;
  }

  /**
   * Gets the value of the 'content_type' field.
   * @return The value of the 'content_type' field.
   */
  public java.lang.CharSequence getContentType() {
    return content_type;
  }


  /**
   * Sets the value of the 'content_type' field.
   * @param value the value to set.
   */
  public void setContentType(java.lang.CharSequence value) {
    this.content_type = value;
  }

  /**
   * Gets the value of the 'media_type' field.
   * @return The value of the 'media_type' field.
   */
  public java.lang.CharSequence getMediaType() {
    return media_type;
  }


  /**
   * Sets the value of the 'media_type' field.
   * @param value the value to set.
   */
  public void setMediaType(java.lang.CharSequence value) {
    this.media_type = value;
  }

  /**
   * Creates a new media_record RecordBuilder.
   * @return A new media_record RecordBuilder
   */
  public static com.auction.sfdc.contract.avro.media_record.Builder newBuilder() {
    return new com.auction.sfdc.contract.avro.media_record.Builder();
  }

  /**
   * Creates a new media_record RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new media_record RecordBuilder
   */
  public static com.auction.sfdc.contract.avro.media_record.Builder newBuilder(com.auction.sfdc.contract.avro.media_record.Builder other) {
    if (other == null) {
      return new com.auction.sfdc.contract.avro.media_record.Builder();
    } else {
      return new com.auction.sfdc.contract.avro.media_record.Builder(other);
    }
  }

  /**
   * Creates a new media_record RecordBuilder by copying an existing media_record instance.
   * @param other The existing instance to copy.
   * @return A new media_record RecordBuilder
   */
  public static com.auction.sfdc.contract.avro.media_record.Builder newBuilder(com.auction.sfdc.contract.avro.media_record other) {
    if (other == null) {
      return new com.auction.sfdc.contract.avro.media_record.Builder();
    } else {
      return new com.auction.sfdc.contract.avro.media_record.Builder(other);
    }
  }

  /**
   * RecordBuilder for media_record instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<media_record>
    implements org.apache.avro.data.RecordBuilder<media_record> {

    private int created_date;
    private int updated_date;
    private int created_by;
    private int updated_by;
    private int media_id;
    private java.lang.CharSequence media_uri;
    private java.lang.CharSequence download_uri;
    private java.lang.CharSequence internal_title;
    private java.lang.CharSequence file_name;
    private java.lang.CharSequence content_type;
    private java.lang.CharSequence media_type;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.auction.sfdc.contract.avro.media_record.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.created_date)) {
        this.created_date = data().deepCopy(fields()[0].schema(), other.created_date);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.updated_date)) {
        this.updated_date = data().deepCopy(fields()[1].schema(), other.updated_date);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.created_by)) {
        this.created_by = data().deepCopy(fields()[2].schema(), other.created_by);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.updated_by)) {
        this.updated_by = data().deepCopy(fields()[3].schema(), other.updated_by);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.media_id)) {
        this.media_id = data().deepCopy(fields()[4].schema(), other.media_id);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.media_uri)) {
        this.media_uri = data().deepCopy(fields()[5].schema(), other.media_uri);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.download_uri)) {
        this.download_uri = data().deepCopy(fields()[6].schema(), other.download_uri);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.internal_title)) {
        this.internal_title = data().deepCopy(fields()[7].schema(), other.internal_title);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.file_name)) {
        this.file_name = data().deepCopy(fields()[8].schema(), other.file_name);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.content_type)) {
        this.content_type = data().deepCopy(fields()[9].schema(), other.content_type);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.media_type)) {
        this.media_type = data().deepCopy(fields()[10].schema(), other.media_type);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
    }

    /**
     * Creates a Builder by copying an existing media_record instance
     * @param other The existing instance to copy.
     */
    private Builder(com.auction.sfdc.contract.avro.media_record other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.created_date)) {
        this.created_date = data().deepCopy(fields()[0].schema(), other.created_date);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.updated_date)) {
        this.updated_date = data().deepCopy(fields()[1].schema(), other.updated_date);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.created_by)) {
        this.created_by = data().deepCopy(fields()[2].schema(), other.created_by);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.updated_by)) {
        this.updated_by = data().deepCopy(fields()[3].schema(), other.updated_by);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.media_id)) {
        this.media_id = data().deepCopy(fields()[4].schema(), other.media_id);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.media_uri)) {
        this.media_uri = data().deepCopy(fields()[5].schema(), other.media_uri);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.download_uri)) {
        this.download_uri = data().deepCopy(fields()[6].schema(), other.download_uri);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.internal_title)) {
        this.internal_title = data().deepCopy(fields()[7].schema(), other.internal_title);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.file_name)) {
        this.file_name = data().deepCopy(fields()[8].schema(), other.file_name);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.content_type)) {
        this.content_type = data().deepCopy(fields()[9].schema(), other.content_type);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.media_type)) {
        this.media_type = data().deepCopy(fields()[10].schema(), other.media_type);
        fieldSetFlags()[10] = true;
      }
    }

    /**
      * Gets the value of the 'created_date' field.
      * @return The value.
      */
    public int getCreatedDate() {
      return created_date;
    }


    /**
      * Sets the value of the 'created_date' field.
      * @param value The value of 'created_date'.
      * @return This builder.
      */
    public com.auction.sfdc.contract.avro.media_record.Builder setCreatedDate(int value) {
      validate(fields()[0], value);
      this.created_date = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'created_date' field has been set.
      * @return True if the 'created_date' field has been set, false otherwise.
      */
    public boolean hasCreatedDate() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'created_date' field.
      * @return This builder.
      */
    public com.auction.sfdc.contract.avro.media_record.Builder clearCreatedDate() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'updated_date' field.
      * @return The value.
      */
    public int getUpdatedDate() {
      return updated_date;
    }


    /**
      * Sets the value of the 'updated_date' field.
      * @param value The value of 'updated_date'.
      * @return This builder.
      */
    public com.auction.sfdc.contract.avro.media_record.Builder setUpdatedDate(int value) {
      validate(fields()[1], value);
      this.updated_date = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'updated_date' field has been set.
      * @return True if the 'updated_date' field has been set, false otherwise.
      */
    public boolean hasUpdatedDate() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'updated_date' field.
      * @return This builder.
      */
    public com.auction.sfdc.contract.avro.media_record.Builder clearUpdatedDate() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'created_by' field.
      * @return The value.
      */
    public int getCreatedBy() {
      return created_by;
    }


    /**
      * Sets the value of the 'created_by' field.
      * @param value The value of 'created_by'.
      * @return This builder.
      */
    public com.auction.sfdc.contract.avro.media_record.Builder setCreatedBy(int value) {
      validate(fields()[2], value);
      this.created_by = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'created_by' field has been set.
      * @return True if the 'created_by' field has been set, false otherwise.
      */
    public boolean hasCreatedBy() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'created_by' field.
      * @return This builder.
      */
    public com.auction.sfdc.contract.avro.media_record.Builder clearCreatedBy() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'updated_by' field.
      * @return The value.
      */
    public int getUpdatedBy() {
      return updated_by;
    }


    /**
      * Sets the value of the 'updated_by' field.
      * @param value The value of 'updated_by'.
      * @return This builder.
      */
    public com.auction.sfdc.contract.avro.media_record.Builder setUpdatedBy(int value) {
      validate(fields()[3], value);
      this.updated_by = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'updated_by' field has been set.
      * @return True if the 'updated_by' field has been set, false otherwise.
      */
    public boolean hasUpdatedBy() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'updated_by' field.
      * @return This builder.
      */
    public com.auction.sfdc.contract.avro.media_record.Builder clearUpdatedBy() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'media_id' field.
      * @return The value.
      */
    public int getMediaId() {
      return media_id;
    }


    /**
      * Sets the value of the 'media_id' field.
      * @param value The value of 'media_id'.
      * @return This builder.
      */
    public com.auction.sfdc.contract.avro.media_record.Builder setMediaId(int value) {
      validate(fields()[4], value);
      this.media_id = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'media_id' field has been set.
      * @return True if the 'media_id' field has been set, false otherwise.
      */
    public boolean hasMediaId() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'media_id' field.
      * @return This builder.
      */
    public com.auction.sfdc.contract.avro.media_record.Builder clearMediaId() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'media_uri' field.
      * @return The value.
      */
    public java.lang.CharSequence getMediaUri() {
      return media_uri;
    }


    /**
      * Sets the value of the 'media_uri' field.
      * @param value The value of 'media_uri'.
      * @return This builder.
      */
    public com.auction.sfdc.contract.avro.media_record.Builder setMediaUri(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.media_uri = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'media_uri' field has been set.
      * @return True if the 'media_uri' field has been set, false otherwise.
      */
    public boolean hasMediaUri() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'media_uri' field.
      * @return This builder.
      */
    public com.auction.sfdc.contract.avro.media_record.Builder clearMediaUri() {
      media_uri = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'download_uri' field.
      * @return The value.
      */
    public java.lang.CharSequence getDownloadUri() {
      return download_uri;
    }


    /**
      * Sets the value of the 'download_uri' field.
      * @param value The value of 'download_uri'.
      * @return This builder.
      */
    public com.auction.sfdc.contract.avro.media_record.Builder setDownloadUri(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.download_uri = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'download_uri' field has been set.
      * @return True if the 'download_uri' field has been set, false otherwise.
      */
    public boolean hasDownloadUri() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'download_uri' field.
      * @return This builder.
      */
    public com.auction.sfdc.contract.avro.media_record.Builder clearDownloadUri() {
      download_uri = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'internal_title' field.
      * @return The value.
      */
    public java.lang.CharSequence getInternalTitle() {
      return internal_title;
    }


    /**
      * Sets the value of the 'internal_title' field.
      * @param value The value of 'internal_title'.
      * @return This builder.
      */
    public com.auction.sfdc.contract.avro.media_record.Builder setInternalTitle(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.internal_title = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'internal_title' field has been set.
      * @return True if the 'internal_title' field has been set, false otherwise.
      */
    public boolean hasInternalTitle() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'internal_title' field.
      * @return This builder.
      */
    public com.auction.sfdc.contract.avro.media_record.Builder clearInternalTitle() {
      internal_title = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'file_name' field.
      * @return The value.
      */
    public java.lang.CharSequence getFileName() {
      return file_name;
    }


    /**
      * Sets the value of the 'file_name' field.
      * @param value The value of 'file_name'.
      * @return This builder.
      */
    public com.auction.sfdc.contract.avro.media_record.Builder setFileName(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.file_name = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'file_name' field has been set.
      * @return True if the 'file_name' field has been set, false otherwise.
      */
    public boolean hasFileName() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'file_name' field.
      * @return This builder.
      */
    public com.auction.sfdc.contract.avro.media_record.Builder clearFileName() {
      file_name = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'content_type' field.
      * @return The value.
      */
    public java.lang.CharSequence getContentType() {
      return content_type;
    }


    /**
      * Sets the value of the 'content_type' field.
      * @param value The value of 'content_type'.
      * @return This builder.
      */
    public com.auction.sfdc.contract.avro.media_record.Builder setContentType(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.content_type = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'content_type' field has been set.
      * @return True if the 'content_type' field has been set, false otherwise.
      */
    public boolean hasContentType() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'content_type' field.
      * @return This builder.
      */
    public com.auction.sfdc.contract.avro.media_record.Builder clearContentType() {
      content_type = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'media_type' field.
      * @return The value.
      */
    public java.lang.CharSequence getMediaType() {
      return media_type;
    }


    /**
      * Sets the value of the 'media_type' field.
      * @param value The value of 'media_type'.
      * @return This builder.
      */
    public com.auction.sfdc.contract.avro.media_record.Builder setMediaType(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.media_type = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'media_type' field has been set.
      * @return True if the 'media_type' field has been set, false otherwise.
      */
    public boolean hasMediaType() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'media_type' field.
      * @return This builder.
      */
    public com.auction.sfdc.contract.avro.media_record.Builder clearMediaType() {
      media_type = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public media_record build() {
      try {
        media_record record = new media_record();
        record.created_date = fieldSetFlags()[0] ? this.created_date : (java.lang.Integer) defaultValue(fields()[0]);
        record.updated_date = fieldSetFlags()[1] ? this.updated_date : (java.lang.Integer) defaultValue(fields()[1]);
        record.created_by = fieldSetFlags()[2] ? this.created_by : (java.lang.Integer) defaultValue(fields()[2]);
        record.updated_by = fieldSetFlags()[3] ? this.updated_by : (java.lang.Integer) defaultValue(fields()[3]);
        record.media_id = fieldSetFlags()[4] ? this.media_id : (java.lang.Integer) defaultValue(fields()[4]);
        record.media_uri = fieldSetFlags()[5] ? this.media_uri : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.download_uri = fieldSetFlags()[6] ? this.download_uri : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.internal_title = fieldSetFlags()[7] ? this.internal_title : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.file_name = fieldSetFlags()[8] ? this.file_name : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.content_type = fieldSetFlags()[9] ? this.content_type : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.media_type = fieldSetFlags()[10] ? this.media_type : (java.lang.CharSequence) defaultValue(fields()[10]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<media_record>
    WRITER$ = (org.apache.avro.io.DatumWriter<media_record>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<media_record>
    READER$ = (org.apache.avro.io.DatumReader<media_record>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeInt(this.created_date);

    out.writeInt(this.updated_date);

    out.writeInt(this.created_by);

    out.writeInt(this.updated_by);

    out.writeInt(this.media_id);

    out.writeString(this.media_uri);

    out.writeString(this.download_uri);

    out.writeString(this.internal_title);

    out.writeString(this.file_name);

    out.writeString(this.content_type);

    out.writeString(this.media_type);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.created_date = in.readInt();

      this.updated_date = in.readInt();

      this.created_by = in.readInt();

      this.updated_by = in.readInt();

      this.media_id = in.readInt();

      this.media_uri = in.readString(this.media_uri instanceof Utf8 ? (Utf8)this.media_uri : null);

      this.download_uri = in.readString(this.download_uri instanceof Utf8 ? (Utf8)this.download_uri : null);

      this.internal_title = in.readString(this.internal_title instanceof Utf8 ? (Utf8)this.internal_title : null);

      this.file_name = in.readString(this.file_name instanceof Utf8 ? (Utf8)this.file_name : null);

      this.content_type = in.readString(this.content_type instanceof Utf8 ? (Utf8)this.content_type : null);

      this.media_type = in.readString(this.media_type instanceof Utf8 ? (Utf8)this.media_type : null);

    } else {
      for (int i = 0; i < 11; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.created_date = in.readInt();
          break;

        case 1:
          this.updated_date = in.readInt();
          break;

        case 2:
          this.created_by = in.readInt();
          break;

        case 3:
          this.updated_by = in.readInt();
          break;

        case 4:
          this.media_id = in.readInt();
          break;

        case 5:
          this.media_uri = in.readString(this.media_uri instanceof Utf8 ? (Utf8)this.media_uri : null);
          break;

        case 6:
          this.download_uri = in.readString(this.download_uri instanceof Utf8 ? (Utf8)this.download_uri : null);
          break;

        case 7:
          this.internal_title = in.readString(this.internal_title instanceof Utf8 ? (Utf8)this.internal_title : null);
          break;

        case 8:
          this.file_name = in.readString(this.file_name instanceof Utf8 ? (Utf8)this.file_name : null);
          break;

        case 9:
          this.content_type = in.readString(this.content_type instanceof Utf8 ? (Utf8)this.content_type : null);
          break;

        case 10:
          this.media_type = in.readString(this.media_type instanceof Utf8 ? (Utf8)this.media_type : null);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










