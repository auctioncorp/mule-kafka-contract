/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.tenx.resi.ms.contract.api.message.offer;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class AgentMessage extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -7657733816680787044L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AgentMessage\",\"namespace\":\"com.tenx.resi.ms.contract.api.message.offer\",\"fields\":[{\"name\":\"agentId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"agentParty\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"PartyMessage\",\"fields\":[{\"name\":\"partyId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"partyType\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"participantType\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"firstName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"lastName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"middleName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"noMiddleName\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"dob\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"companyName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"addressType\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"streetNumber\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"streetName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"streetUnit\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"city\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"state\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"postalCode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"emailAddress\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"phoneType\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"phoneNumber\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"licenseNumber\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"licenseState\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"licenseType\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"agentFirm\",\"type\":[\"null\",\"PartyMessage\"],\"default\":null},{\"name\":\"brokerCoOpFlag\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"brokerCommission\",\"type\":[\"null\",{\"type\":\"string\",\"java-class\":\"java.math.BigDecimal\"}],\"default\":null},{\"name\":\"isAgentLicenseValidated\",\"type\":\"boolean\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<AgentMessage> ENCODER =
      new BinaryMessageEncoder<AgentMessage>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<AgentMessage> DECODER =
      new BinaryMessageDecoder<AgentMessage>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<AgentMessage> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<AgentMessage> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<AgentMessage> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<AgentMessage>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this AgentMessage to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a AgentMessage from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a AgentMessage instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static AgentMessage fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.Long agentId;
   private com.tenx.resi.ms.contract.api.message.offer.PartyMessage agentParty;
   private com.tenx.resi.ms.contract.api.message.offer.PartyMessage agentFirm;
   private java.lang.Boolean brokerCoOpFlag;
   private java.math.BigDecimal brokerCommission;
   private boolean isAgentLicenseValidated;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public AgentMessage() {}

  /**
   * All-args constructor.
   * @param agentId The new value for agentId
   * @param agentParty The new value for agentParty
   * @param agentFirm The new value for agentFirm
   * @param brokerCoOpFlag The new value for brokerCoOpFlag
   * @param brokerCommission The new value for brokerCommission
   * @param isAgentLicenseValidated The new value for isAgentLicenseValidated
   */
  public AgentMessage(java.lang.Long agentId, com.tenx.resi.ms.contract.api.message.offer.PartyMessage agentParty, com.tenx.resi.ms.contract.api.message.offer.PartyMessage agentFirm, java.lang.Boolean brokerCoOpFlag, java.math.BigDecimal brokerCommission, java.lang.Boolean isAgentLicenseValidated) {
    this.agentId = agentId;
    this.agentParty = agentParty;
    this.agentFirm = agentFirm;
    this.brokerCoOpFlag = brokerCoOpFlag;
    this.brokerCommission = brokerCommission;
    this.isAgentLicenseValidated = isAgentLicenseValidated;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return agentId;
    case 1: return agentParty;
    case 2: return agentFirm;
    case 3: return brokerCoOpFlag;
    case 4: return brokerCommission;
    case 5: return isAgentLicenseValidated;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: agentId = (java.lang.Long)value$; break;
    case 1: agentParty = (com.tenx.resi.ms.contract.api.message.offer.PartyMessage)value$; break;
    case 2: agentFirm = (com.tenx.resi.ms.contract.api.message.offer.PartyMessage)value$; break;
    case 3: brokerCoOpFlag = (java.lang.Boolean)value$; break;
    case 4: brokerCommission = (java.math.BigDecimal)value$; break;
    case 5: isAgentLicenseValidated = (java.lang.Boolean)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'agentId' field.
   * @return The value of the 'agentId' field.
   */
  public java.lang.Long getAgentId() {
    return agentId;
  }


  /**
   * Sets the value of the 'agentId' field.
   * @param value the value to set.
   */
  public void setAgentId(java.lang.Long value) {
    this.agentId = value;
  }

  /**
   * Gets the value of the 'agentParty' field.
   * @return The value of the 'agentParty' field.
   */
  public com.tenx.resi.ms.contract.api.message.offer.PartyMessage getAgentParty() {
    return agentParty;
  }


  /**
   * Sets the value of the 'agentParty' field.
   * @param value the value to set.
   */
  public void setAgentParty(com.tenx.resi.ms.contract.api.message.offer.PartyMessage value) {
    this.agentParty = value;
  }

  /**
   * Gets the value of the 'agentFirm' field.
   * @return The value of the 'agentFirm' field.
   */
  public com.tenx.resi.ms.contract.api.message.offer.PartyMessage getAgentFirm() {
    return agentFirm;
  }


  /**
   * Sets the value of the 'agentFirm' field.
   * @param value the value to set.
   */
  public void setAgentFirm(com.tenx.resi.ms.contract.api.message.offer.PartyMessage value) {
    this.agentFirm = value;
  }

  /**
   * Gets the value of the 'brokerCoOpFlag' field.
   * @return The value of the 'brokerCoOpFlag' field.
   */
  public java.lang.Boolean getBrokerCoOpFlag() {
    return brokerCoOpFlag;
  }


  /**
   * Sets the value of the 'brokerCoOpFlag' field.
   * @param value the value to set.
   */
  public void setBrokerCoOpFlag(java.lang.Boolean value) {
    this.brokerCoOpFlag = value;
  }

  /**
   * Gets the value of the 'brokerCommission' field.
   * @return The value of the 'brokerCommission' field.
   */
  public java.math.BigDecimal getBrokerCommission() {
    return brokerCommission;
  }


  /**
   * Sets the value of the 'brokerCommission' field.
   * @param value the value to set.
   */
  public void setBrokerCommission(java.math.BigDecimal value) {
    this.brokerCommission = value;
  }

  /**
   * Gets the value of the 'isAgentLicenseValidated' field.
   * @return The value of the 'isAgentLicenseValidated' field.
   */
  public boolean getIsAgentLicenseValidated() {
    return isAgentLicenseValidated;
  }


  /**
   * Sets the value of the 'isAgentLicenseValidated' field.
   * @param value the value to set.
   */
  public void setIsAgentLicenseValidated(boolean value) {
    this.isAgentLicenseValidated = value;
  }

  /**
   * Creates a new AgentMessage RecordBuilder.
   * @return A new AgentMessage RecordBuilder
   */
  public static com.tenx.resi.ms.contract.api.message.offer.AgentMessage.Builder newBuilder() {
    return new com.tenx.resi.ms.contract.api.message.offer.AgentMessage.Builder();
  }

  /**
   * Creates a new AgentMessage RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AgentMessage RecordBuilder
   */
  public static com.tenx.resi.ms.contract.api.message.offer.AgentMessage.Builder newBuilder(com.tenx.resi.ms.contract.api.message.offer.AgentMessage.Builder other) {
    if (other == null) {
      return new com.tenx.resi.ms.contract.api.message.offer.AgentMessage.Builder();
    } else {
      return new com.tenx.resi.ms.contract.api.message.offer.AgentMessage.Builder(other);
    }
  }

  /**
   * Creates a new AgentMessage RecordBuilder by copying an existing AgentMessage instance.
   * @param other The existing instance to copy.
   * @return A new AgentMessage RecordBuilder
   */
  public static com.tenx.resi.ms.contract.api.message.offer.AgentMessage.Builder newBuilder(com.tenx.resi.ms.contract.api.message.offer.AgentMessage other) {
    if (other == null) {
      return new com.tenx.resi.ms.contract.api.message.offer.AgentMessage.Builder();
    } else {
      return new com.tenx.resi.ms.contract.api.message.offer.AgentMessage.Builder(other);
    }
  }

  /**
   * RecordBuilder for AgentMessage instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AgentMessage>
    implements org.apache.avro.data.RecordBuilder<AgentMessage> {

    private java.lang.Long agentId;
    private com.tenx.resi.ms.contract.api.message.offer.PartyMessage agentParty;
    private com.tenx.resi.ms.contract.api.message.offer.PartyMessage.Builder agentPartyBuilder;
    private com.tenx.resi.ms.contract.api.message.offer.PartyMessage agentFirm;
    private com.tenx.resi.ms.contract.api.message.offer.PartyMessage.Builder agentFirmBuilder;
    private java.lang.Boolean brokerCoOpFlag;
    private java.math.BigDecimal brokerCommission;
    private boolean isAgentLicenseValidated;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.tenx.resi.ms.contract.api.message.offer.AgentMessage.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.agentId)) {
        this.agentId = data().deepCopy(fields()[0].schema(), other.agentId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.agentParty)) {
        this.agentParty = data().deepCopy(fields()[1].schema(), other.agentParty);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (other.hasAgentPartyBuilder()) {
        this.agentPartyBuilder = com.tenx.resi.ms.contract.api.message.offer.PartyMessage.newBuilder(other.getAgentPartyBuilder());
      }
      if (isValidValue(fields()[2], other.agentFirm)) {
        this.agentFirm = data().deepCopy(fields()[2].schema(), other.agentFirm);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (other.hasAgentFirmBuilder()) {
        this.agentFirmBuilder = com.tenx.resi.ms.contract.api.message.offer.PartyMessage.newBuilder(other.getAgentFirmBuilder());
      }
      if (isValidValue(fields()[3], other.brokerCoOpFlag)) {
        this.brokerCoOpFlag = data().deepCopy(fields()[3].schema(), other.brokerCoOpFlag);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.brokerCommission)) {
        this.brokerCommission = data().deepCopy(fields()[4].schema(), other.brokerCommission);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.isAgentLicenseValidated)) {
        this.isAgentLicenseValidated = data().deepCopy(fields()[5].schema(), other.isAgentLicenseValidated);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
    }

    /**
     * Creates a Builder by copying an existing AgentMessage instance
     * @param other The existing instance to copy.
     */
    private Builder(com.tenx.resi.ms.contract.api.message.offer.AgentMessage other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.agentId)) {
        this.agentId = data().deepCopy(fields()[0].schema(), other.agentId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.agentParty)) {
        this.agentParty = data().deepCopy(fields()[1].schema(), other.agentParty);
        fieldSetFlags()[1] = true;
      }
      this.agentPartyBuilder = null;
      if (isValidValue(fields()[2], other.agentFirm)) {
        this.agentFirm = data().deepCopy(fields()[2].schema(), other.agentFirm);
        fieldSetFlags()[2] = true;
      }
      this.agentFirmBuilder = null;
      if (isValidValue(fields()[3], other.brokerCoOpFlag)) {
        this.brokerCoOpFlag = data().deepCopy(fields()[3].schema(), other.brokerCoOpFlag);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.brokerCommission)) {
        this.brokerCommission = data().deepCopy(fields()[4].schema(), other.brokerCommission);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.isAgentLicenseValidated)) {
        this.isAgentLicenseValidated = data().deepCopy(fields()[5].schema(), other.isAgentLicenseValidated);
        fieldSetFlags()[5] = true;
      }
    }

    /**
      * Gets the value of the 'agentId' field.
      * @return The value.
      */
    public java.lang.Long getAgentId() {
      return agentId;
    }


    /**
      * Sets the value of the 'agentId' field.
      * @param value The value of 'agentId'.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.AgentMessage.Builder setAgentId(java.lang.Long value) {
      validate(fields()[0], value);
      this.agentId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'agentId' field has been set.
      * @return True if the 'agentId' field has been set, false otherwise.
      */
    public boolean hasAgentId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'agentId' field.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.AgentMessage.Builder clearAgentId() {
      agentId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'agentParty' field.
      * @return The value.
      */
    public com.tenx.resi.ms.contract.api.message.offer.PartyMessage getAgentParty() {
      return agentParty;
    }


    /**
      * Sets the value of the 'agentParty' field.
      * @param value The value of 'agentParty'.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.AgentMessage.Builder setAgentParty(com.tenx.resi.ms.contract.api.message.offer.PartyMessage value) {
      validate(fields()[1], value);
      this.agentPartyBuilder = null;
      this.agentParty = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'agentParty' field has been set.
      * @return True if the 'agentParty' field has been set, false otherwise.
      */
    public boolean hasAgentParty() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'agentParty' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.tenx.resi.ms.contract.api.message.offer.PartyMessage.Builder getAgentPartyBuilder() {
      if (agentPartyBuilder == null) {
        if (hasAgentParty()) {
          setAgentPartyBuilder(com.tenx.resi.ms.contract.api.message.offer.PartyMessage.newBuilder(agentParty));
        } else {
          setAgentPartyBuilder(com.tenx.resi.ms.contract.api.message.offer.PartyMessage.newBuilder());
        }
      }
      return agentPartyBuilder;
    }

    /**
     * Sets the Builder instance for the 'agentParty' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.tenx.resi.ms.contract.api.message.offer.AgentMessage.Builder setAgentPartyBuilder(com.tenx.resi.ms.contract.api.message.offer.PartyMessage.Builder value) {
      clearAgentParty();
      agentPartyBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'agentParty' field has an active Builder instance
     * @return True if the 'agentParty' field has an active Builder instance
     */
    public boolean hasAgentPartyBuilder() {
      return agentPartyBuilder != null;
    }

    /**
      * Clears the value of the 'agentParty' field.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.AgentMessage.Builder clearAgentParty() {
      agentParty = null;
      agentPartyBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'agentFirm' field.
      * @return The value.
      */
    public com.tenx.resi.ms.contract.api.message.offer.PartyMessage getAgentFirm() {
      return agentFirm;
    }


    /**
      * Sets the value of the 'agentFirm' field.
      * @param value The value of 'agentFirm'.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.AgentMessage.Builder setAgentFirm(com.tenx.resi.ms.contract.api.message.offer.PartyMessage value) {
      validate(fields()[2], value);
      this.agentFirmBuilder = null;
      this.agentFirm = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'agentFirm' field has been set.
      * @return True if the 'agentFirm' field has been set, false otherwise.
      */
    public boolean hasAgentFirm() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'agentFirm' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.tenx.resi.ms.contract.api.message.offer.PartyMessage.Builder getAgentFirmBuilder() {
      if (agentFirmBuilder == null) {
        if (hasAgentFirm()) {
          setAgentFirmBuilder(com.tenx.resi.ms.contract.api.message.offer.PartyMessage.newBuilder(agentFirm));
        } else {
          setAgentFirmBuilder(com.tenx.resi.ms.contract.api.message.offer.PartyMessage.newBuilder());
        }
      }
      return agentFirmBuilder;
    }

    /**
     * Sets the Builder instance for the 'agentFirm' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.tenx.resi.ms.contract.api.message.offer.AgentMessage.Builder setAgentFirmBuilder(com.tenx.resi.ms.contract.api.message.offer.PartyMessage.Builder value) {
      clearAgentFirm();
      agentFirmBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'agentFirm' field has an active Builder instance
     * @return True if the 'agentFirm' field has an active Builder instance
     */
    public boolean hasAgentFirmBuilder() {
      return agentFirmBuilder != null;
    }

    /**
      * Clears the value of the 'agentFirm' field.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.AgentMessage.Builder clearAgentFirm() {
      agentFirm = null;
      agentFirmBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'brokerCoOpFlag' field.
      * @return The value.
      */
    public java.lang.Boolean getBrokerCoOpFlag() {
      return brokerCoOpFlag;
    }


    /**
      * Sets the value of the 'brokerCoOpFlag' field.
      * @param value The value of 'brokerCoOpFlag'.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.AgentMessage.Builder setBrokerCoOpFlag(java.lang.Boolean value) {
      validate(fields()[3], value);
      this.brokerCoOpFlag = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'brokerCoOpFlag' field has been set.
      * @return True if the 'brokerCoOpFlag' field has been set, false otherwise.
      */
    public boolean hasBrokerCoOpFlag() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'brokerCoOpFlag' field.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.AgentMessage.Builder clearBrokerCoOpFlag() {
      brokerCoOpFlag = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'brokerCommission' field.
      * @return The value.
      */
    public java.math.BigDecimal getBrokerCommission() {
      return brokerCommission;
    }


    /**
      * Sets the value of the 'brokerCommission' field.
      * @param value The value of 'brokerCommission'.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.AgentMessage.Builder setBrokerCommission(java.math.BigDecimal value) {
      validate(fields()[4], value);
      this.brokerCommission = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'brokerCommission' field has been set.
      * @return True if the 'brokerCommission' field has been set, false otherwise.
      */
    public boolean hasBrokerCommission() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'brokerCommission' field.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.AgentMessage.Builder clearBrokerCommission() {
      brokerCommission = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'isAgentLicenseValidated' field.
      * @return The value.
      */
    public boolean getIsAgentLicenseValidated() {
      return isAgentLicenseValidated;
    }


    /**
      * Sets the value of the 'isAgentLicenseValidated' field.
      * @param value The value of 'isAgentLicenseValidated'.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.AgentMessage.Builder setIsAgentLicenseValidated(boolean value) {
      validate(fields()[5], value);
      this.isAgentLicenseValidated = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'isAgentLicenseValidated' field has been set.
      * @return True if the 'isAgentLicenseValidated' field has been set, false otherwise.
      */
    public boolean hasIsAgentLicenseValidated() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'isAgentLicenseValidated' field.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.AgentMessage.Builder clearIsAgentLicenseValidated() {
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public AgentMessage build() {
      try {
        AgentMessage record = new AgentMessage();
        record.agentId = fieldSetFlags()[0] ? this.agentId : (java.lang.Long) defaultValue(fields()[0]);
        if (agentPartyBuilder != null) {
          try {
            record.agentParty = this.agentPartyBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("agentParty"));
            throw e;
          }
        } else {
          record.agentParty = fieldSetFlags()[1] ? this.agentParty : (com.tenx.resi.ms.contract.api.message.offer.PartyMessage) defaultValue(fields()[1]);
        }
        if (agentFirmBuilder != null) {
          try {
            record.agentFirm = this.agentFirmBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("agentFirm"));
            throw e;
          }
        } else {
          record.agentFirm = fieldSetFlags()[2] ? this.agentFirm : (com.tenx.resi.ms.contract.api.message.offer.PartyMessage) defaultValue(fields()[2]);
        }
        record.brokerCoOpFlag = fieldSetFlags()[3] ? this.brokerCoOpFlag : (java.lang.Boolean) defaultValue(fields()[3]);
        record.brokerCommission = fieldSetFlags()[4] ? this.brokerCommission : (java.math.BigDecimal) defaultValue(fields()[4]);
        record.isAgentLicenseValidated = fieldSetFlags()[5] ? this.isAgentLicenseValidated : (java.lang.Boolean) defaultValue(fields()[5]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<AgentMessage>
    WRITER$ = (org.apache.avro.io.DatumWriter<AgentMessage>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<AgentMessage>
    READER$ = (org.apache.avro.io.DatumReader<AgentMessage>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.agentId == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.agentId);
    }

    if (this.agentParty == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.agentParty.customEncode(out);
    }

    if (this.agentFirm == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.agentFirm.customEncode(out);
    }

    if (this.brokerCoOpFlag == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeBoolean(this.brokerCoOpFlag);
    }

    if (this.brokerCommission == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.brokerCommission.toString());
    }

    out.writeBoolean(this.isAgentLicenseValidated);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.agentId = null;
      } else {
        this.agentId = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.agentParty = null;
      } else {
        if (this.agentParty == null) {
          this.agentParty = new com.tenx.resi.ms.contract.api.message.offer.PartyMessage();
        }
        this.agentParty.customDecode(in);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.agentFirm = null;
      } else {
        if (this.agentFirm == null) {
          this.agentFirm = new com.tenx.resi.ms.contract.api.message.offer.PartyMessage();
        }
        this.agentFirm.customDecode(in);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.brokerCoOpFlag = null;
      } else {
        this.brokerCoOpFlag = in.readBoolean();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.brokerCommission = null;
      } else {
        this.brokerCommission = new java.math.BigDecimal(in.readString());
      }

      this.isAgentLicenseValidated = in.readBoolean();

    } else {
      for (int i = 0; i < 6; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.agentId = null;
          } else {
            this.agentId = in.readLong();
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.agentParty = null;
          } else {
            if (this.agentParty == null) {
              this.agentParty = new com.tenx.resi.ms.contract.api.message.offer.PartyMessage();
            }
            this.agentParty.customDecode(in);
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.agentFirm = null;
          } else {
            if (this.agentFirm == null) {
              this.agentFirm = new com.tenx.resi.ms.contract.api.message.offer.PartyMessage();
            }
            this.agentFirm.customDecode(in);
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.brokerCoOpFlag = null;
          } else {
            this.brokerCoOpFlag = in.readBoolean();
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.brokerCommission = null;
          } else {
            this.brokerCommission = new java.math.BigDecimal(in.readString());
          }
          break;

        case 5:
          this.isAgentLicenseValidated = in.readBoolean();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










