/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.tenx.resi.ms.contract.api.message.offer;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class OwnershipSignatureMessage extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -1892176107136733488L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"OwnershipSignatureMessage\",\"namespace\":\"com.tenx.resi.ms.contract.api.message.offer\",\"fields\":[{\"name\":\"ownershipSignatureId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"signorNameTitle\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"signerName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"signerTitle\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"signerTitleOther\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"managingCompanyName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"trustDate\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Date\",\"namespace\":\"java.util\",\"fields\":[]}],\"default\":null},{\"name\":\"sortOrder\",\"type\":[\"null\",\"double\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<OwnershipSignatureMessage> ENCODER =
      new BinaryMessageEncoder<OwnershipSignatureMessage>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<OwnershipSignatureMessage> DECODER =
      new BinaryMessageDecoder<OwnershipSignatureMessage>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<OwnershipSignatureMessage> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<OwnershipSignatureMessage> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<OwnershipSignatureMessage> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<OwnershipSignatureMessage>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this OwnershipSignatureMessage to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a OwnershipSignatureMessage from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a OwnershipSignatureMessage instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static OwnershipSignatureMessage fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.Long ownershipSignatureId;
   private java.lang.CharSequence signorNameTitle;
   private java.lang.CharSequence signerName;
   private java.lang.CharSequence signerTitle;
   private java.lang.CharSequence signerTitleOther;
   private java.lang.CharSequence managingCompanyName;
   private java.util.Date trustDate;
   private java.lang.Double sortOrder;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public OwnershipSignatureMessage() {}

  /**
   * All-args constructor.
   * @param ownershipSignatureId The new value for ownershipSignatureId
   * @param signorNameTitle The new value for signorNameTitle
   * @param signerName The new value for signerName
   * @param signerTitle The new value for signerTitle
   * @param signerTitleOther The new value for signerTitleOther
   * @param managingCompanyName The new value for managingCompanyName
   * @param trustDate The new value for trustDate
   * @param sortOrder The new value for sortOrder
   */
  public OwnershipSignatureMessage(java.lang.Long ownershipSignatureId, java.lang.CharSequence signorNameTitle, java.lang.CharSequence signerName, java.lang.CharSequence signerTitle, java.lang.CharSequence signerTitleOther, java.lang.CharSequence managingCompanyName, java.util.Date trustDate, java.lang.Double sortOrder) {
    this.ownershipSignatureId = ownershipSignatureId;
    this.signorNameTitle = signorNameTitle;
    this.signerName = signerName;
    this.signerTitle = signerTitle;
    this.signerTitleOther = signerTitleOther;
    this.managingCompanyName = managingCompanyName;
    this.trustDate = trustDate;
    this.sortOrder = sortOrder;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return ownershipSignatureId;
    case 1: return signorNameTitle;
    case 2: return signerName;
    case 3: return signerTitle;
    case 4: return signerTitleOther;
    case 5: return managingCompanyName;
    case 6: return trustDate;
    case 7: return sortOrder;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: ownershipSignatureId = (java.lang.Long)value$; break;
    case 1: signorNameTitle = (java.lang.CharSequence)value$; break;
    case 2: signerName = (java.lang.CharSequence)value$; break;
    case 3: signerTitle = (java.lang.CharSequence)value$; break;
    case 4: signerTitleOther = (java.lang.CharSequence)value$; break;
    case 5: managingCompanyName = (java.lang.CharSequence)value$; break;
    case 6: trustDate = (java.util.Date)value$; break;
    case 7: sortOrder = (java.lang.Double)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'ownershipSignatureId' field.
   * @return The value of the 'ownershipSignatureId' field.
   */
  public java.lang.Long getOwnershipSignatureId() {
    return ownershipSignatureId;
  }


  /**
   * Sets the value of the 'ownershipSignatureId' field.
   * @param value the value to set.
   */
  public void setOwnershipSignatureId(java.lang.Long value) {
    this.ownershipSignatureId = value;
  }

  /**
   * Gets the value of the 'signorNameTitle' field.
   * @return The value of the 'signorNameTitle' field.
   */
  public java.lang.CharSequence getSignorNameTitle() {
    return signorNameTitle;
  }


  /**
   * Sets the value of the 'signorNameTitle' field.
   * @param value the value to set.
   */
  public void setSignorNameTitle(java.lang.CharSequence value) {
    this.signorNameTitle = value;
  }

  /**
   * Gets the value of the 'signerName' field.
   * @return The value of the 'signerName' field.
   */
  public java.lang.CharSequence getSignerName() {
    return signerName;
  }


  /**
   * Sets the value of the 'signerName' field.
   * @param value the value to set.
   */
  public void setSignerName(java.lang.CharSequence value) {
    this.signerName = value;
  }

  /**
   * Gets the value of the 'signerTitle' field.
   * @return The value of the 'signerTitle' field.
   */
  public java.lang.CharSequence getSignerTitle() {
    return signerTitle;
  }


  /**
   * Sets the value of the 'signerTitle' field.
   * @param value the value to set.
   */
  public void setSignerTitle(java.lang.CharSequence value) {
    this.signerTitle = value;
  }

  /**
   * Gets the value of the 'signerTitleOther' field.
   * @return The value of the 'signerTitleOther' field.
   */
  public java.lang.CharSequence getSignerTitleOther() {
    return signerTitleOther;
  }


  /**
   * Sets the value of the 'signerTitleOther' field.
   * @param value the value to set.
   */
  public void setSignerTitleOther(java.lang.CharSequence value) {
    this.signerTitleOther = value;
  }

  /**
   * Gets the value of the 'managingCompanyName' field.
   * @return The value of the 'managingCompanyName' field.
   */
  public java.lang.CharSequence getManagingCompanyName() {
    return managingCompanyName;
  }


  /**
   * Sets the value of the 'managingCompanyName' field.
   * @param value the value to set.
   */
  public void setManagingCompanyName(java.lang.CharSequence value) {
    this.managingCompanyName = value;
  }

  /**
   * Gets the value of the 'trustDate' field.
   * @return The value of the 'trustDate' field.
   */
  public java.util.Date getTrustDate() {
    return trustDate;
  }


  /**
   * Sets the value of the 'trustDate' field.
   * @param value the value to set.
   */
  public void setTrustDate(java.util.Date value) {
    this.trustDate = value;
  }

  /**
   * Gets the value of the 'sortOrder' field.
   * @return The value of the 'sortOrder' field.
   */
  public java.lang.Double getSortOrder() {
    return sortOrder;
  }


  /**
   * Sets the value of the 'sortOrder' field.
   * @param value the value to set.
   */
  public void setSortOrder(java.lang.Double value) {
    this.sortOrder = value;
  }

  /**
   * Creates a new OwnershipSignatureMessage RecordBuilder.
   * @return A new OwnershipSignatureMessage RecordBuilder
   */
  public static com.tenx.resi.ms.contract.api.message.offer.OwnershipSignatureMessage.Builder newBuilder() {
    return new com.tenx.resi.ms.contract.api.message.offer.OwnershipSignatureMessage.Builder();
  }

  /**
   * Creates a new OwnershipSignatureMessage RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new OwnershipSignatureMessage RecordBuilder
   */
  public static com.tenx.resi.ms.contract.api.message.offer.OwnershipSignatureMessage.Builder newBuilder(com.tenx.resi.ms.contract.api.message.offer.OwnershipSignatureMessage.Builder other) {
    if (other == null) {
      return new com.tenx.resi.ms.contract.api.message.offer.OwnershipSignatureMessage.Builder();
    } else {
      return new com.tenx.resi.ms.contract.api.message.offer.OwnershipSignatureMessage.Builder(other);
    }
  }

  /**
   * Creates a new OwnershipSignatureMessage RecordBuilder by copying an existing OwnershipSignatureMessage instance.
   * @param other The existing instance to copy.
   * @return A new OwnershipSignatureMessage RecordBuilder
   */
  public static com.tenx.resi.ms.contract.api.message.offer.OwnershipSignatureMessage.Builder newBuilder(com.tenx.resi.ms.contract.api.message.offer.OwnershipSignatureMessage other) {
    if (other == null) {
      return new com.tenx.resi.ms.contract.api.message.offer.OwnershipSignatureMessage.Builder();
    } else {
      return new com.tenx.resi.ms.contract.api.message.offer.OwnershipSignatureMessage.Builder(other);
    }
  }

  /**
   * RecordBuilder for OwnershipSignatureMessage instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<OwnershipSignatureMessage>
    implements org.apache.avro.data.RecordBuilder<OwnershipSignatureMessage> {

    private java.lang.Long ownershipSignatureId;
    private java.lang.CharSequence signorNameTitle;
    private java.lang.CharSequence signerName;
    private java.lang.CharSequence signerTitle;
    private java.lang.CharSequence signerTitleOther;
    private java.lang.CharSequence managingCompanyName;
    private java.util.Date trustDate;
    //private java.util.Date.Builder trustDateBuilder;
    private java.lang.Double sortOrder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.tenx.resi.ms.contract.api.message.offer.OwnershipSignatureMessage.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.ownershipSignatureId)) {
        this.ownershipSignatureId = data().deepCopy(fields()[0].schema(), other.ownershipSignatureId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.signorNameTitle)) {
        this.signorNameTitle = data().deepCopy(fields()[1].schema(), other.signorNameTitle);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.signerName)) {
        this.signerName = data().deepCopy(fields()[2].schema(), other.signerName);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.signerTitle)) {
        this.signerTitle = data().deepCopy(fields()[3].schema(), other.signerTitle);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.signerTitleOther)) {
        this.signerTitleOther = data().deepCopy(fields()[4].schema(), other.signerTitleOther);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.managingCompanyName)) {
        this.managingCompanyName = data().deepCopy(fields()[5].schema(), other.managingCompanyName);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.trustDate)) {
        this.trustDate = data().deepCopy(fields()[6].schema(), other.trustDate);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      /*if (other.hasTrustDateBuilder()) {
        this.trustDateBuilder = java.util.Date.newBuilder(other.getTrustDateBuilder());
      }*/
      if (isValidValue(fields()[7], other.sortOrder)) {
        this.sortOrder = data().deepCopy(fields()[7].schema(), other.sortOrder);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
    }

    /**
     * Creates a Builder by copying an existing OwnershipSignatureMessage instance
     * @param other The existing instance to copy.
     */
    private Builder(com.tenx.resi.ms.contract.api.message.offer.OwnershipSignatureMessage other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.ownershipSignatureId)) {
        this.ownershipSignatureId = data().deepCopy(fields()[0].schema(), other.ownershipSignatureId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.signorNameTitle)) {
        this.signorNameTitle = data().deepCopy(fields()[1].schema(), other.signorNameTitle);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.signerName)) {
        this.signerName = data().deepCopy(fields()[2].schema(), other.signerName);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.signerTitle)) {
        this.signerTitle = data().deepCopy(fields()[3].schema(), other.signerTitle);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.signerTitleOther)) {
        this.signerTitleOther = data().deepCopy(fields()[4].schema(), other.signerTitleOther);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.managingCompanyName)) {
        this.managingCompanyName = data().deepCopy(fields()[5].schema(), other.managingCompanyName);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.trustDate)) {
        this.trustDate = data().deepCopy(fields()[6].schema(), other.trustDate);
        fieldSetFlags()[6] = true;
      }
      //this.trustDateBuilder = null;
      if (isValidValue(fields()[7], other.sortOrder)) {
        this.sortOrder = data().deepCopy(fields()[7].schema(), other.sortOrder);
        fieldSetFlags()[7] = true;
      }
    }

    /**
      * Gets the value of the 'ownershipSignatureId' field.
      * @return The value.
      */
    public java.lang.Long getOwnershipSignatureId() {
      return ownershipSignatureId;
    }


    /**
      * Sets the value of the 'ownershipSignatureId' field.
      * @param value The value of 'ownershipSignatureId'.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.OwnershipSignatureMessage.Builder setOwnershipSignatureId(java.lang.Long value) {
      validate(fields()[0], value);
      this.ownershipSignatureId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'ownershipSignatureId' field has been set.
      * @return True if the 'ownershipSignatureId' field has been set, false otherwise.
      */
    public boolean hasOwnershipSignatureId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'ownershipSignatureId' field.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.OwnershipSignatureMessage.Builder clearOwnershipSignatureId() {
      ownershipSignatureId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'signorNameTitle' field.
      * @return The value.
      */
    public java.lang.CharSequence getSignorNameTitle() {
      return signorNameTitle;
    }


    /**
      * Sets the value of the 'signorNameTitle' field.
      * @param value The value of 'signorNameTitle'.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.OwnershipSignatureMessage.Builder setSignorNameTitle(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.signorNameTitle = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'signorNameTitle' field has been set.
      * @return True if the 'signorNameTitle' field has been set, false otherwise.
      */
    public boolean hasSignorNameTitle() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'signorNameTitle' field.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.OwnershipSignatureMessage.Builder clearSignorNameTitle() {
      signorNameTitle = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'signerName' field.
      * @return The value.
      */
    public java.lang.CharSequence getSignerName() {
      return signerName;
    }


    /**
      * Sets the value of the 'signerName' field.
      * @param value The value of 'signerName'.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.OwnershipSignatureMessage.Builder setSignerName(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.signerName = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'signerName' field has been set.
      * @return True if the 'signerName' field has been set, false otherwise.
      */
    public boolean hasSignerName() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'signerName' field.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.OwnershipSignatureMessage.Builder clearSignerName() {
      signerName = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'signerTitle' field.
      * @return The value.
      */
    public java.lang.CharSequence getSignerTitle() {
      return signerTitle;
    }


    /**
      * Sets the value of the 'signerTitle' field.
      * @param value The value of 'signerTitle'.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.OwnershipSignatureMessage.Builder setSignerTitle(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.signerTitle = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'signerTitle' field has been set.
      * @return True if the 'signerTitle' field has been set, false otherwise.
      */
    public boolean hasSignerTitle() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'signerTitle' field.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.OwnershipSignatureMessage.Builder clearSignerTitle() {
      signerTitle = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'signerTitleOther' field.
      * @return The value.
      */
    public java.lang.CharSequence getSignerTitleOther() {
      return signerTitleOther;
    }


    /**
      * Sets the value of the 'signerTitleOther' field.
      * @param value The value of 'signerTitleOther'.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.OwnershipSignatureMessage.Builder setSignerTitleOther(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.signerTitleOther = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'signerTitleOther' field has been set.
      * @return True if the 'signerTitleOther' field has been set, false otherwise.
      */
    public boolean hasSignerTitleOther() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'signerTitleOther' field.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.OwnershipSignatureMessage.Builder clearSignerTitleOther() {
      signerTitleOther = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'managingCompanyName' field.
      * @return The value.
      */
    public java.lang.CharSequence getManagingCompanyName() {
      return managingCompanyName;
    }


    /**
      * Sets the value of the 'managingCompanyName' field.
      * @param value The value of 'managingCompanyName'.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.OwnershipSignatureMessage.Builder setManagingCompanyName(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.managingCompanyName = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'managingCompanyName' field has been set.
      * @return True if the 'managingCompanyName' field has been set, false otherwise.
      */
    public boolean hasManagingCompanyName() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'managingCompanyName' field.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.OwnershipSignatureMessage.Builder clearManagingCompanyName() {
      managingCompanyName = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'trustDate' field.
      * @return The value.
      */
    public java.util.Date getTrustDate() {
      return trustDate;
    }


    /**
      * Sets the value of the 'trustDate' field.
      * @param value The value of 'trustDate'.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.OwnershipSignatureMessage.Builder setTrustDate(java.util.Date value) {
      validate(fields()[6], value);
      //this.trustDateBuilder = null;
      this.trustDate = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'trustDate' field has been set.
      * @return True if the 'trustDate' field has been set, false otherwise.
      */
    public boolean hasTrustDate() {
      return fieldSetFlags()[6];
    }

    /**
     * Gets the Builder instance for the 'trustDate' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    /*public java.util.Date.Builder getTrustDateBuilder() {
      if (trustDateBuilder == null) {
        if (hasTrustDate()) {
          setTrustDateBuilder(java.util.Date.newBuilder(trustDate));
        } else {
          setTrustDateBuilder(java.util.Date.newBuilder());
        }
      }
      return trustDateBuilder;
    }*/

    /**
     * Sets the Builder instance for the 'trustDate' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    /*public com.tenx.resi.ms.contract.api.message.offer.OwnershipSignatureMessage.Builder setTrustDateBuilder(java.util.Date.Builder value) {
      clearTrustDate();
      trustDateBuilder = value;
      return this;
    }*/

    /**
     * Checks whether the 'trustDate' field has an active Builder instance
     * @return True if the 'trustDate' field has an active Builder instance
     */
    /*public boolean hasTrustDateBuilder() {
      return trustDateBuilder != null;
    }*/

    /**
      * Clears the value of the 'trustDate' field.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.OwnershipSignatureMessage.Builder clearTrustDate() {
      trustDate = null;
      //trustDateBuilder = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'sortOrder' field.
      * @return The value.
      */
    public java.lang.Double getSortOrder() {
      return sortOrder;
    }


    /**
      * Sets the value of the 'sortOrder' field.
      * @param value The value of 'sortOrder'.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.OwnershipSignatureMessage.Builder setSortOrder(java.lang.Double value) {
      validate(fields()[7], value);
      this.sortOrder = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'sortOrder' field has been set.
      * @return True if the 'sortOrder' field has been set, false otherwise.
      */
    public boolean hasSortOrder() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'sortOrder' field.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.OwnershipSignatureMessage.Builder clearSortOrder() {
      sortOrder = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public OwnershipSignatureMessage build() {
      try {
        OwnershipSignatureMessage record = new OwnershipSignatureMessage();
        record.ownershipSignatureId = fieldSetFlags()[0] ? this.ownershipSignatureId : (java.lang.Long) defaultValue(fields()[0]);
        record.signorNameTitle = fieldSetFlags()[1] ? this.signorNameTitle : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.signerName = fieldSetFlags()[2] ? this.signerName : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.signerTitle = fieldSetFlags()[3] ? this.signerTitle : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.signerTitleOther = fieldSetFlags()[4] ? this.signerTitleOther : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.managingCompanyName = fieldSetFlags()[5] ? this.managingCompanyName : (java.lang.CharSequence) defaultValue(fields()[5]);
        /*if (trustDateBuilder != null) {
          try {
            record.trustDate = this.trustDateBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("trustDate"));
            throw e;
          }
        } else {*/
          record.trustDate = fieldSetFlags()[6] ? this.trustDate : (java.util.Date) defaultValue(fields()[6]);
        //}
        record.sortOrder = fieldSetFlags()[7] ? this.sortOrder : (java.lang.Double) defaultValue(fields()[7]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<OwnershipSignatureMessage>
    WRITER$ = (org.apache.avro.io.DatumWriter<OwnershipSignatureMessage>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<OwnershipSignatureMessage>
    READER$ = (org.apache.avro.io.DatumReader<OwnershipSignatureMessage>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.ownershipSignatureId == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.ownershipSignatureId);
    }

    if (this.signorNameTitle == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.signorNameTitle);
    }

    if (this.signerName == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.signerName);
    }

    if (this.signerTitle == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.signerTitle);
    }

    if (this.signerTitleOther == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.signerTitleOther);
    }

    if (this.managingCompanyName == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.managingCompanyName);
    }

    if (this.trustDate == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      //this.trustDate.customEncode(out);
    }

    if (this.sortOrder == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeDouble(this.sortOrder);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.ownershipSignatureId = null;
      } else {
        this.ownershipSignatureId = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.signorNameTitle = null;
      } else {
        this.signorNameTitle = in.readString(this.signorNameTitle instanceof Utf8 ? (Utf8)this.signorNameTitle : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.signerName = null;
      } else {
        this.signerName = in.readString(this.signerName instanceof Utf8 ? (Utf8)this.signerName : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.signerTitle = null;
      } else {
        this.signerTitle = in.readString(this.signerTitle instanceof Utf8 ? (Utf8)this.signerTitle : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.signerTitleOther = null;
      } else {
        this.signerTitleOther = in.readString(this.signerTitleOther instanceof Utf8 ? (Utf8)this.signerTitleOther : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.managingCompanyName = null;
      } else {
        this.managingCompanyName = in.readString(this.managingCompanyName instanceof Utf8 ? (Utf8)this.managingCompanyName : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.trustDate = null;
      } else {
        if (this.trustDate == null) {
          this.trustDate = new java.util.Date();
        }
        //this.trustDate.customDecode(in);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.sortOrder = null;
      } else {
        this.sortOrder = in.readDouble();
      }

    } else {
      for (int i = 0; i < 8; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.ownershipSignatureId = null;
          } else {
            this.ownershipSignatureId = in.readLong();
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.signorNameTitle = null;
          } else {
            this.signorNameTitle = in.readString(this.signorNameTitle instanceof Utf8 ? (Utf8)this.signorNameTitle : null);
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.signerName = null;
          } else {
            this.signerName = in.readString(this.signerName instanceof Utf8 ? (Utf8)this.signerName : null);
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.signerTitle = null;
          } else {
            this.signerTitle = in.readString(this.signerTitle instanceof Utf8 ? (Utf8)this.signerTitle : null);
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.signerTitleOther = null;
          } else {
            this.signerTitleOther = in.readString(this.signerTitleOther instanceof Utf8 ? (Utf8)this.signerTitleOther : null);
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.managingCompanyName = null;
          } else {
            this.managingCompanyName = in.readString(this.managingCompanyName instanceof Utf8 ? (Utf8)this.managingCompanyName : null);
          }
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.trustDate = null;
          } else {
            if (this.trustDate == null) {
              this.trustDate = new java.util.Date();
            }
            //this.trustDate.customDecode(in);
          }
          break;

        case 7:
          if (in.readIndex() != 1) {
            in.readNull();
            this.sortOrder = null;
          } else {
            this.sortOrder = in.readDouble();
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










