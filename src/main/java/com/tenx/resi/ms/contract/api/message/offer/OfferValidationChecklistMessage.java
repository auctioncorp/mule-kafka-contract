/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.tenx.resi.ms.contract.api.message.offer;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class OfferValidationChecklistMessage extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 1423939642113546010L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"OfferValidationChecklistMessage\",\"namespace\":\"com.tenx.resi.ms.contract.api.message.offer\",\"fields\":[{\"name\":\"missingDocuments\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"string\",\"java-class\":\"java.util.List\"}],\"default\":null},{\"name\":\"listingAgentInfoMissing\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"freddieMacValidationsFailing\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"fannieMaeValidationsFailing\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"isMoreBuyerInvolved\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"isMoreEntityInvolved\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"isMoreSignerInvolved\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"isInternationalBuyerInvolved\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"agentLicenseFollowup\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"legalDescriptionMissing\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"isLegacyIntegration\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"addendumFileSizeLimitExceeded\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"missingClosingCompanyFields\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"string\",\"java-class\":\"java.util.List\"}],\"default\":null},{\"name\":\"mlhSyncError\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"contractGenerationError\",\"type\":[\"null\",\"boolean\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<OfferValidationChecklistMessage> ENCODER =
      new BinaryMessageEncoder<OfferValidationChecklistMessage>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<OfferValidationChecklistMessage> DECODER =
      new BinaryMessageDecoder<OfferValidationChecklistMessage>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<OfferValidationChecklistMessage> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<OfferValidationChecklistMessage> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<OfferValidationChecklistMessage> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<OfferValidationChecklistMessage>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this OfferValidationChecklistMessage to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a OfferValidationChecklistMessage from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a OfferValidationChecklistMessage instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static OfferValidationChecklistMessage fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.util.List<java.lang.CharSequence> missingDocuments;
   private java.lang.Boolean listingAgentInfoMissing;
   private java.lang.Boolean freddieMacValidationsFailing;
   private java.lang.Boolean fannieMaeValidationsFailing;
   private java.lang.Boolean isMoreBuyerInvolved;
   private java.lang.Boolean isMoreEntityInvolved;
   private java.lang.Boolean isMoreSignerInvolved;
   private java.lang.Boolean isInternationalBuyerInvolved;
   private java.lang.Boolean agentLicenseFollowup;
   private java.lang.Boolean legalDescriptionMissing;
   private java.lang.Boolean isLegacyIntegration;
   private java.lang.Boolean addendumFileSizeLimitExceeded;
   private java.util.List<java.lang.CharSequence> missingClosingCompanyFields;
   private java.lang.Boolean mlhSyncError;
   private java.lang.Boolean contractGenerationError;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public OfferValidationChecklistMessage() {}

  /**
   * All-args constructor.
   * @param missingDocuments The new value for missingDocuments
   * @param listingAgentInfoMissing The new value for listingAgentInfoMissing
   * @param freddieMacValidationsFailing The new value for freddieMacValidationsFailing
   * @param fannieMaeValidationsFailing The new value for fannieMaeValidationsFailing
   * @param isMoreBuyerInvolved The new value for isMoreBuyerInvolved
   * @param isMoreEntityInvolved The new value for isMoreEntityInvolved
   * @param isMoreSignerInvolved The new value for isMoreSignerInvolved
   * @param isInternationalBuyerInvolved The new value for isInternationalBuyerInvolved
   * @param agentLicenseFollowup The new value for agentLicenseFollowup
   * @param legalDescriptionMissing The new value for legalDescriptionMissing
   * @param isLegacyIntegration The new value for isLegacyIntegration
   * @param addendumFileSizeLimitExceeded The new value for addendumFileSizeLimitExceeded
   * @param missingClosingCompanyFields The new value for missingClosingCompanyFields
   * @param mlhSyncError The new value for mlhSyncError
   * @param contractGenerationError The new value for contractGenerationError
   */
  public OfferValidationChecklistMessage(java.util.List<java.lang.CharSequence> missingDocuments, java.lang.Boolean listingAgentInfoMissing, java.lang.Boolean freddieMacValidationsFailing, java.lang.Boolean fannieMaeValidationsFailing, java.lang.Boolean isMoreBuyerInvolved, java.lang.Boolean isMoreEntityInvolved, java.lang.Boolean isMoreSignerInvolved, java.lang.Boolean isInternationalBuyerInvolved, java.lang.Boolean agentLicenseFollowup, java.lang.Boolean legalDescriptionMissing, java.lang.Boolean isLegacyIntegration, java.lang.Boolean addendumFileSizeLimitExceeded, java.util.List<java.lang.CharSequence> missingClosingCompanyFields, java.lang.Boolean mlhSyncError, java.lang.Boolean contractGenerationError) {
    this.missingDocuments = missingDocuments;
    this.listingAgentInfoMissing = listingAgentInfoMissing;
    this.freddieMacValidationsFailing = freddieMacValidationsFailing;
    this.fannieMaeValidationsFailing = fannieMaeValidationsFailing;
    this.isMoreBuyerInvolved = isMoreBuyerInvolved;
    this.isMoreEntityInvolved = isMoreEntityInvolved;
    this.isMoreSignerInvolved = isMoreSignerInvolved;
    this.isInternationalBuyerInvolved = isInternationalBuyerInvolved;
    this.agentLicenseFollowup = agentLicenseFollowup;
    this.legalDescriptionMissing = legalDescriptionMissing;
    this.isLegacyIntegration = isLegacyIntegration;
    this.addendumFileSizeLimitExceeded = addendumFileSizeLimitExceeded;
    this.missingClosingCompanyFields = missingClosingCompanyFields;
    this.mlhSyncError = mlhSyncError;
    this.contractGenerationError = contractGenerationError;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return missingDocuments;
    case 1: return listingAgentInfoMissing;
    case 2: return freddieMacValidationsFailing;
    case 3: return fannieMaeValidationsFailing;
    case 4: return isMoreBuyerInvolved;
    case 5: return isMoreEntityInvolved;
    case 6: return isMoreSignerInvolved;
    case 7: return isInternationalBuyerInvolved;
    case 8: return agentLicenseFollowup;
    case 9: return legalDescriptionMissing;
    case 10: return isLegacyIntegration;
    case 11: return addendumFileSizeLimitExceeded;
    case 12: return missingClosingCompanyFields;
    case 13: return mlhSyncError;
    case 14: return contractGenerationError;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: missingDocuments = (java.util.List<java.lang.CharSequence>)value$; break;
    case 1: listingAgentInfoMissing = (java.lang.Boolean)value$; break;
    case 2: freddieMacValidationsFailing = (java.lang.Boolean)value$; break;
    case 3: fannieMaeValidationsFailing = (java.lang.Boolean)value$; break;
    case 4: isMoreBuyerInvolved = (java.lang.Boolean)value$; break;
    case 5: isMoreEntityInvolved = (java.lang.Boolean)value$; break;
    case 6: isMoreSignerInvolved = (java.lang.Boolean)value$; break;
    case 7: isInternationalBuyerInvolved = (java.lang.Boolean)value$; break;
    case 8: agentLicenseFollowup = (java.lang.Boolean)value$; break;
    case 9: legalDescriptionMissing = (java.lang.Boolean)value$; break;
    case 10: isLegacyIntegration = (java.lang.Boolean)value$; break;
    case 11: addendumFileSizeLimitExceeded = (java.lang.Boolean)value$; break;
    case 12: missingClosingCompanyFields = (java.util.List<java.lang.CharSequence>)value$; break;
    case 13: mlhSyncError = (java.lang.Boolean)value$; break;
    case 14: contractGenerationError = (java.lang.Boolean)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'missingDocuments' field.
   * @return The value of the 'missingDocuments' field.
   */
  public java.util.List<java.lang.CharSequence> getMissingDocuments() {
    return missingDocuments;
  }


  /**
   * Sets the value of the 'missingDocuments' field.
   * @param value the value to set.
   */
  public void setMissingDocuments(java.util.List<java.lang.CharSequence> value) {
    this.missingDocuments = value;
  }

  /**
   * Gets the value of the 'listingAgentInfoMissing' field.
   * @return The value of the 'listingAgentInfoMissing' field.
   */
  public java.lang.Boolean getListingAgentInfoMissing() {
    return listingAgentInfoMissing;
  }


  /**
   * Sets the value of the 'listingAgentInfoMissing' field.
   * @param value the value to set.
   */
  public void setListingAgentInfoMissing(java.lang.Boolean value) {
    this.listingAgentInfoMissing = value;
  }

  /**
   * Gets the value of the 'freddieMacValidationsFailing' field.
   * @return The value of the 'freddieMacValidationsFailing' field.
   */
  public java.lang.Boolean getFreddieMacValidationsFailing() {
    return freddieMacValidationsFailing;
  }


  /**
   * Sets the value of the 'freddieMacValidationsFailing' field.
   * @param value the value to set.
   */
  public void setFreddieMacValidationsFailing(java.lang.Boolean value) {
    this.freddieMacValidationsFailing = value;
  }

  /**
   * Gets the value of the 'fannieMaeValidationsFailing' field.
   * @return The value of the 'fannieMaeValidationsFailing' field.
   */
  public java.lang.Boolean getFannieMaeValidationsFailing() {
    return fannieMaeValidationsFailing;
  }


  /**
   * Sets the value of the 'fannieMaeValidationsFailing' field.
   * @param value the value to set.
   */
  public void setFannieMaeValidationsFailing(java.lang.Boolean value) {
    this.fannieMaeValidationsFailing = value;
  }

  /**
   * Gets the value of the 'isMoreBuyerInvolved' field.
   * @return The value of the 'isMoreBuyerInvolved' field.
   */
  public java.lang.Boolean getIsMoreBuyerInvolved() {
    return isMoreBuyerInvolved;
  }


  /**
   * Sets the value of the 'isMoreBuyerInvolved' field.
   * @param value the value to set.
   */
  public void setIsMoreBuyerInvolved(java.lang.Boolean value) {
    this.isMoreBuyerInvolved = value;
  }

  /**
   * Gets the value of the 'isMoreEntityInvolved' field.
   * @return The value of the 'isMoreEntityInvolved' field.
   */
  public java.lang.Boolean getIsMoreEntityInvolved() {
    return isMoreEntityInvolved;
  }


  /**
   * Sets the value of the 'isMoreEntityInvolved' field.
   * @param value the value to set.
   */
  public void setIsMoreEntityInvolved(java.lang.Boolean value) {
    this.isMoreEntityInvolved = value;
  }

  /**
   * Gets the value of the 'isMoreSignerInvolved' field.
   * @return The value of the 'isMoreSignerInvolved' field.
   */
  public java.lang.Boolean getIsMoreSignerInvolved() {
    return isMoreSignerInvolved;
  }


  /**
   * Sets the value of the 'isMoreSignerInvolved' field.
   * @param value the value to set.
   */
  public void setIsMoreSignerInvolved(java.lang.Boolean value) {
    this.isMoreSignerInvolved = value;
  }

  /**
   * Gets the value of the 'isInternationalBuyerInvolved' field.
   * @return The value of the 'isInternationalBuyerInvolved' field.
   */
  public java.lang.Boolean getIsInternationalBuyerInvolved() {
    return isInternationalBuyerInvolved;
  }


  /**
   * Sets the value of the 'isInternationalBuyerInvolved' field.
   * @param value the value to set.
   */
  public void setIsInternationalBuyerInvolved(java.lang.Boolean value) {
    this.isInternationalBuyerInvolved = value;
  }

  /**
   * Gets the value of the 'agentLicenseFollowup' field.
   * @return The value of the 'agentLicenseFollowup' field.
   */
  public java.lang.Boolean getAgentLicenseFollowup() {
    return agentLicenseFollowup;
  }


  /**
   * Sets the value of the 'agentLicenseFollowup' field.
   * @param value the value to set.
   */
  public void setAgentLicenseFollowup(java.lang.Boolean value) {
    this.agentLicenseFollowup = value;
  }

  /**
   * Gets the value of the 'legalDescriptionMissing' field.
   * @return The value of the 'legalDescriptionMissing' field.
   */
  public java.lang.Boolean getLegalDescriptionMissing() {
    return legalDescriptionMissing;
  }


  /**
   * Sets the value of the 'legalDescriptionMissing' field.
   * @param value the value to set.
   */
  public void setLegalDescriptionMissing(java.lang.Boolean value) {
    this.legalDescriptionMissing = value;
  }

  /**
   * Gets the value of the 'isLegacyIntegration' field.
   * @return The value of the 'isLegacyIntegration' field.
   */
  public java.lang.Boolean getIsLegacyIntegration() {
    return isLegacyIntegration;
  }


  /**
   * Sets the value of the 'isLegacyIntegration' field.
   * @param value the value to set.
   */
  public void setIsLegacyIntegration(java.lang.Boolean value) {
    this.isLegacyIntegration = value;
  }

  /**
   * Gets the value of the 'addendumFileSizeLimitExceeded' field.
   * @return The value of the 'addendumFileSizeLimitExceeded' field.
   */
  public java.lang.Boolean getAddendumFileSizeLimitExceeded() {
    return addendumFileSizeLimitExceeded;
  }


  /**
   * Sets the value of the 'addendumFileSizeLimitExceeded' field.
   * @param value the value to set.
   */
  public void setAddendumFileSizeLimitExceeded(java.lang.Boolean value) {
    this.addendumFileSizeLimitExceeded = value;
  }

  /**
   * Gets the value of the 'missingClosingCompanyFields' field.
   * @return The value of the 'missingClosingCompanyFields' field.
   */
  public java.util.List<java.lang.CharSequence> getMissingClosingCompanyFields() {
    return missingClosingCompanyFields;
  }


  /**
   * Sets the value of the 'missingClosingCompanyFields' field.
   * @param value the value to set.
   */
  public void setMissingClosingCompanyFields(java.util.List<java.lang.CharSequence> value) {
    this.missingClosingCompanyFields = value;
  }

  /**
   * Gets the value of the 'mlhSyncError' field.
   * @return The value of the 'mlhSyncError' field.
   */
  public java.lang.Boolean getMlhSyncError() {
    return mlhSyncError;
  }


  /**
   * Sets the value of the 'mlhSyncError' field.
   * @param value the value to set.
   */
  public void setMlhSyncError(java.lang.Boolean value) {
    this.mlhSyncError = value;
  }

  /**
   * Gets the value of the 'contractGenerationError' field.
   * @return The value of the 'contractGenerationError' field.
   */
  public java.lang.Boolean getContractGenerationError() {
    return contractGenerationError;
  }


  /**
   * Sets the value of the 'contractGenerationError' field.
   * @param value the value to set.
   */
  public void setContractGenerationError(java.lang.Boolean value) {
    this.contractGenerationError = value;
  }

  /**
   * Creates a new OfferValidationChecklistMessage RecordBuilder.
   * @return A new OfferValidationChecklistMessage RecordBuilder
   */
  public static com.tenx.resi.ms.contract.api.message.offer.OfferValidationChecklistMessage.Builder newBuilder() {
    return new com.tenx.resi.ms.contract.api.message.offer.OfferValidationChecklistMessage.Builder();
  }

  /**
   * Creates a new OfferValidationChecklistMessage RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new OfferValidationChecklistMessage RecordBuilder
   */
  public static com.tenx.resi.ms.contract.api.message.offer.OfferValidationChecklistMessage.Builder newBuilder(com.tenx.resi.ms.contract.api.message.offer.OfferValidationChecklistMessage.Builder other) {
    if (other == null) {
      return new com.tenx.resi.ms.contract.api.message.offer.OfferValidationChecklistMessage.Builder();
    } else {
      return new com.tenx.resi.ms.contract.api.message.offer.OfferValidationChecklistMessage.Builder(other);
    }
  }

  /**
   * Creates a new OfferValidationChecklistMessage RecordBuilder by copying an existing OfferValidationChecklistMessage instance.
   * @param other The existing instance to copy.
   * @return A new OfferValidationChecklistMessage RecordBuilder
   */
  public static com.tenx.resi.ms.contract.api.message.offer.OfferValidationChecklistMessage.Builder newBuilder(com.tenx.resi.ms.contract.api.message.offer.OfferValidationChecklistMessage other) {
    if (other == null) {
      return new com.tenx.resi.ms.contract.api.message.offer.OfferValidationChecklistMessage.Builder();
    } else {
      return new com.tenx.resi.ms.contract.api.message.offer.OfferValidationChecklistMessage.Builder(other);
    }
  }

  /**
   * RecordBuilder for OfferValidationChecklistMessage instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<OfferValidationChecklistMessage>
    implements org.apache.avro.data.RecordBuilder<OfferValidationChecklistMessage> {

    private java.util.List<java.lang.CharSequence> missingDocuments;
    private java.lang.Boolean listingAgentInfoMissing;
    private java.lang.Boolean freddieMacValidationsFailing;
    private java.lang.Boolean fannieMaeValidationsFailing;
    private java.lang.Boolean isMoreBuyerInvolved;
    private java.lang.Boolean isMoreEntityInvolved;
    private java.lang.Boolean isMoreSignerInvolved;
    private java.lang.Boolean isInternationalBuyerInvolved;
    private java.lang.Boolean agentLicenseFollowup;
    private java.lang.Boolean legalDescriptionMissing;
    private java.lang.Boolean isLegacyIntegration;
    private java.lang.Boolean addendumFileSizeLimitExceeded;
    private java.util.List<java.lang.CharSequence> missingClosingCompanyFields;
    private java.lang.Boolean mlhSyncError;
    private java.lang.Boolean contractGenerationError;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.tenx.resi.ms.contract.api.message.offer.OfferValidationChecklistMessage.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.missingDocuments)) {
        this.missingDocuments = data().deepCopy(fields()[0].schema(), other.missingDocuments);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.listingAgentInfoMissing)) {
        this.listingAgentInfoMissing = data().deepCopy(fields()[1].schema(), other.listingAgentInfoMissing);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.freddieMacValidationsFailing)) {
        this.freddieMacValidationsFailing = data().deepCopy(fields()[2].schema(), other.freddieMacValidationsFailing);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.fannieMaeValidationsFailing)) {
        this.fannieMaeValidationsFailing = data().deepCopy(fields()[3].schema(), other.fannieMaeValidationsFailing);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.isMoreBuyerInvolved)) {
        this.isMoreBuyerInvolved = data().deepCopy(fields()[4].schema(), other.isMoreBuyerInvolved);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.isMoreEntityInvolved)) {
        this.isMoreEntityInvolved = data().deepCopy(fields()[5].schema(), other.isMoreEntityInvolved);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.isMoreSignerInvolved)) {
        this.isMoreSignerInvolved = data().deepCopy(fields()[6].schema(), other.isMoreSignerInvolved);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.isInternationalBuyerInvolved)) {
        this.isInternationalBuyerInvolved = data().deepCopy(fields()[7].schema(), other.isInternationalBuyerInvolved);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.agentLicenseFollowup)) {
        this.agentLicenseFollowup = data().deepCopy(fields()[8].schema(), other.agentLicenseFollowup);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.legalDescriptionMissing)) {
        this.legalDescriptionMissing = data().deepCopy(fields()[9].schema(), other.legalDescriptionMissing);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.isLegacyIntegration)) {
        this.isLegacyIntegration = data().deepCopy(fields()[10].schema(), other.isLegacyIntegration);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.addendumFileSizeLimitExceeded)) {
        this.addendumFileSizeLimitExceeded = data().deepCopy(fields()[11].schema(), other.addendumFileSizeLimitExceeded);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.missingClosingCompanyFields)) {
        this.missingClosingCompanyFields = data().deepCopy(fields()[12].schema(), other.missingClosingCompanyFields);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.mlhSyncError)) {
        this.mlhSyncError = data().deepCopy(fields()[13].schema(), other.mlhSyncError);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.contractGenerationError)) {
        this.contractGenerationError = data().deepCopy(fields()[14].schema(), other.contractGenerationError);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
    }

    /**
     * Creates a Builder by copying an existing OfferValidationChecklistMessage instance
     * @param other The existing instance to copy.
     */
    private Builder(com.tenx.resi.ms.contract.api.message.offer.OfferValidationChecklistMessage other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.missingDocuments)) {
        this.missingDocuments = data().deepCopy(fields()[0].schema(), other.missingDocuments);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.listingAgentInfoMissing)) {
        this.listingAgentInfoMissing = data().deepCopy(fields()[1].schema(), other.listingAgentInfoMissing);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.freddieMacValidationsFailing)) {
        this.freddieMacValidationsFailing = data().deepCopy(fields()[2].schema(), other.freddieMacValidationsFailing);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.fannieMaeValidationsFailing)) {
        this.fannieMaeValidationsFailing = data().deepCopy(fields()[3].schema(), other.fannieMaeValidationsFailing);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.isMoreBuyerInvolved)) {
        this.isMoreBuyerInvolved = data().deepCopy(fields()[4].schema(), other.isMoreBuyerInvolved);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.isMoreEntityInvolved)) {
        this.isMoreEntityInvolved = data().deepCopy(fields()[5].schema(), other.isMoreEntityInvolved);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.isMoreSignerInvolved)) {
        this.isMoreSignerInvolved = data().deepCopy(fields()[6].schema(), other.isMoreSignerInvolved);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.isInternationalBuyerInvolved)) {
        this.isInternationalBuyerInvolved = data().deepCopy(fields()[7].schema(), other.isInternationalBuyerInvolved);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.agentLicenseFollowup)) {
        this.agentLicenseFollowup = data().deepCopy(fields()[8].schema(), other.agentLicenseFollowup);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.legalDescriptionMissing)) {
        this.legalDescriptionMissing = data().deepCopy(fields()[9].schema(), other.legalDescriptionMissing);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.isLegacyIntegration)) {
        this.isLegacyIntegration = data().deepCopy(fields()[10].schema(), other.isLegacyIntegration);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.addendumFileSizeLimitExceeded)) {
        this.addendumFileSizeLimitExceeded = data().deepCopy(fields()[11].schema(), other.addendumFileSizeLimitExceeded);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.missingClosingCompanyFields)) {
        this.missingClosingCompanyFields = data().deepCopy(fields()[12].schema(), other.missingClosingCompanyFields);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.mlhSyncError)) {
        this.mlhSyncError = data().deepCopy(fields()[13].schema(), other.mlhSyncError);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.contractGenerationError)) {
        this.contractGenerationError = data().deepCopy(fields()[14].schema(), other.contractGenerationError);
        fieldSetFlags()[14] = true;
      }
    }

    /**
      * Gets the value of the 'missingDocuments' field.
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getMissingDocuments() {
      return missingDocuments;
    }


    /**
      * Sets the value of the 'missingDocuments' field.
      * @param value The value of 'missingDocuments'.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.OfferValidationChecklistMessage.Builder setMissingDocuments(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[0], value);
      this.missingDocuments = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'missingDocuments' field has been set.
      * @return True if the 'missingDocuments' field has been set, false otherwise.
      */
    public boolean hasMissingDocuments() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'missingDocuments' field.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.OfferValidationChecklistMessage.Builder clearMissingDocuments() {
      missingDocuments = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'listingAgentInfoMissing' field.
      * @return The value.
      */
    public java.lang.Boolean getListingAgentInfoMissing() {
      return listingAgentInfoMissing;
    }


    /**
      * Sets the value of the 'listingAgentInfoMissing' field.
      * @param value The value of 'listingAgentInfoMissing'.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.OfferValidationChecklistMessage.Builder setListingAgentInfoMissing(java.lang.Boolean value) {
      validate(fields()[1], value);
      this.listingAgentInfoMissing = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'listingAgentInfoMissing' field has been set.
      * @return True if the 'listingAgentInfoMissing' field has been set, false otherwise.
      */
    public boolean hasListingAgentInfoMissing() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'listingAgentInfoMissing' field.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.OfferValidationChecklistMessage.Builder clearListingAgentInfoMissing() {
      listingAgentInfoMissing = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'freddieMacValidationsFailing' field.
      * @return The value.
      */
    public java.lang.Boolean getFreddieMacValidationsFailing() {
      return freddieMacValidationsFailing;
    }


    /**
      * Sets the value of the 'freddieMacValidationsFailing' field.
      * @param value The value of 'freddieMacValidationsFailing'.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.OfferValidationChecklistMessage.Builder setFreddieMacValidationsFailing(java.lang.Boolean value) {
      validate(fields()[2], value);
      this.freddieMacValidationsFailing = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'freddieMacValidationsFailing' field has been set.
      * @return True if the 'freddieMacValidationsFailing' field has been set, false otherwise.
      */
    public boolean hasFreddieMacValidationsFailing() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'freddieMacValidationsFailing' field.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.OfferValidationChecklistMessage.Builder clearFreddieMacValidationsFailing() {
      freddieMacValidationsFailing = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'fannieMaeValidationsFailing' field.
      * @return The value.
      */
    public java.lang.Boolean getFannieMaeValidationsFailing() {
      return fannieMaeValidationsFailing;
    }


    /**
      * Sets the value of the 'fannieMaeValidationsFailing' field.
      * @param value The value of 'fannieMaeValidationsFailing'.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.OfferValidationChecklistMessage.Builder setFannieMaeValidationsFailing(java.lang.Boolean value) {
      validate(fields()[3], value);
      this.fannieMaeValidationsFailing = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'fannieMaeValidationsFailing' field has been set.
      * @return True if the 'fannieMaeValidationsFailing' field has been set, false otherwise.
      */
    public boolean hasFannieMaeValidationsFailing() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'fannieMaeValidationsFailing' field.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.OfferValidationChecklistMessage.Builder clearFannieMaeValidationsFailing() {
      fannieMaeValidationsFailing = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'isMoreBuyerInvolved' field.
      * @return The value.
      */
    public java.lang.Boolean getIsMoreBuyerInvolved() {
      return isMoreBuyerInvolved;
    }


    /**
      * Sets the value of the 'isMoreBuyerInvolved' field.
      * @param value The value of 'isMoreBuyerInvolved'.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.OfferValidationChecklistMessage.Builder setIsMoreBuyerInvolved(java.lang.Boolean value) {
      validate(fields()[4], value);
      this.isMoreBuyerInvolved = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'isMoreBuyerInvolved' field has been set.
      * @return True if the 'isMoreBuyerInvolved' field has been set, false otherwise.
      */
    public boolean hasIsMoreBuyerInvolved() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'isMoreBuyerInvolved' field.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.OfferValidationChecklistMessage.Builder clearIsMoreBuyerInvolved() {
      isMoreBuyerInvolved = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'isMoreEntityInvolved' field.
      * @return The value.
      */
    public java.lang.Boolean getIsMoreEntityInvolved() {
      return isMoreEntityInvolved;
    }


    /**
      * Sets the value of the 'isMoreEntityInvolved' field.
      * @param value The value of 'isMoreEntityInvolved'.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.OfferValidationChecklistMessage.Builder setIsMoreEntityInvolved(java.lang.Boolean value) {
      validate(fields()[5], value);
      this.isMoreEntityInvolved = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'isMoreEntityInvolved' field has been set.
      * @return True if the 'isMoreEntityInvolved' field has been set, false otherwise.
      */
    public boolean hasIsMoreEntityInvolved() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'isMoreEntityInvolved' field.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.OfferValidationChecklistMessage.Builder clearIsMoreEntityInvolved() {
      isMoreEntityInvolved = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'isMoreSignerInvolved' field.
      * @return The value.
      */
    public java.lang.Boolean getIsMoreSignerInvolved() {
      return isMoreSignerInvolved;
    }


    /**
      * Sets the value of the 'isMoreSignerInvolved' field.
      * @param value The value of 'isMoreSignerInvolved'.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.OfferValidationChecklistMessage.Builder setIsMoreSignerInvolved(java.lang.Boolean value) {
      validate(fields()[6], value);
      this.isMoreSignerInvolved = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'isMoreSignerInvolved' field has been set.
      * @return True if the 'isMoreSignerInvolved' field has been set, false otherwise.
      */
    public boolean hasIsMoreSignerInvolved() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'isMoreSignerInvolved' field.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.OfferValidationChecklistMessage.Builder clearIsMoreSignerInvolved() {
      isMoreSignerInvolved = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'isInternationalBuyerInvolved' field.
      * @return The value.
      */
    public java.lang.Boolean getIsInternationalBuyerInvolved() {
      return isInternationalBuyerInvolved;
    }


    /**
      * Sets the value of the 'isInternationalBuyerInvolved' field.
      * @param value The value of 'isInternationalBuyerInvolved'.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.OfferValidationChecklistMessage.Builder setIsInternationalBuyerInvolved(java.lang.Boolean value) {
      validate(fields()[7], value);
      this.isInternationalBuyerInvolved = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'isInternationalBuyerInvolved' field has been set.
      * @return True if the 'isInternationalBuyerInvolved' field has been set, false otherwise.
      */
    public boolean hasIsInternationalBuyerInvolved() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'isInternationalBuyerInvolved' field.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.OfferValidationChecklistMessage.Builder clearIsInternationalBuyerInvolved() {
      isInternationalBuyerInvolved = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'agentLicenseFollowup' field.
      * @return The value.
      */
    public java.lang.Boolean getAgentLicenseFollowup() {
      return agentLicenseFollowup;
    }


    /**
      * Sets the value of the 'agentLicenseFollowup' field.
      * @param value The value of 'agentLicenseFollowup'.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.OfferValidationChecklistMessage.Builder setAgentLicenseFollowup(java.lang.Boolean value) {
      validate(fields()[8], value);
      this.agentLicenseFollowup = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'agentLicenseFollowup' field has been set.
      * @return True if the 'agentLicenseFollowup' field has been set, false otherwise.
      */
    public boolean hasAgentLicenseFollowup() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'agentLicenseFollowup' field.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.OfferValidationChecklistMessage.Builder clearAgentLicenseFollowup() {
      agentLicenseFollowup = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'legalDescriptionMissing' field.
      * @return The value.
      */
    public java.lang.Boolean getLegalDescriptionMissing() {
      return legalDescriptionMissing;
    }


    /**
      * Sets the value of the 'legalDescriptionMissing' field.
      * @param value The value of 'legalDescriptionMissing'.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.OfferValidationChecklistMessage.Builder setLegalDescriptionMissing(java.lang.Boolean value) {
      validate(fields()[9], value);
      this.legalDescriptionMissing = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'legalDescriptionMissing' field has been set.
      * @return True if the 'legalDescriptionMissing' field has been set, false otherwise.
      */
    public boolean hasLegalDescriptionMissing() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'legalDescriptionMissing' field.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.OfferValidationChecklistMessage.Builder clearLegalDescriptionMissing() {
      legalDescriptionMissing = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'isLegacyIntegration' field.
      * @return The value.
      */
    public java.lang.Boolean getIsLegacyIntegration() {
      return isLegacyIntegration;
    }


    /**
      * Sets the value of the 'isLegacyIntegration' field.
      * @param value The value of 'isLegacyIntegration'.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.OfferValidationChecklistMessage.Builder setIsLegacyIntegration(java.lang.Boolean value) {
      validate(fields()[10], value);
      this.isLegacyIntegration = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'isLegacyIntegration' field has been set.
      * @return True if the 'isLegacyIntegration' field has been set, false otherwise.
      */
    public boolean hasIsLegacyIntegration() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'isLegacyIntegration' field.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.OfferValidationChecklistMessage.Builder clearIsLegacyIntegration() {
      isLegacyIntegration = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'addendumFileSizeLimitExceeded' field.
      * @return The value.
      */
    public java.lang.Boolean getAddendumFileSizeLimitExceeded() {
      return addendumFileSizeLimitExceeded;
    }


    /**
      * Sets the value of the 'addendumFileSizeLimitExceeded' field.
      * @param value The value of 'addendumFileSizeLimitExceeded'.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.OfferValidationChecklistMessage.Builder setAddendumFileSizeLimitExceeded(java.lang.Boolean value) {
      validate(fields()[11], value);
      this.addendumFileSizeLimitExceeded = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'addendumFileSizeLimitExceeded' field has been set.
      * @return True if the 'addendumFileSizeLimitExceeded' field has been set, false otherwise.
      */
    public boolean hasAddendumFileSizeLimitExceeded() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'addendumFileSizeLimitExceeded' field.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.OfferValidationChecklistMessage.Builder clearAddendumFileSizeLimitExceeded() {
      addendumFileSizeLimitExceeded = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'missingClosingCompanyFields' field.
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getMissingClosingCompanyFields() {
      return missingClosingCompanyFields;
    }


    /**
      * Sets the value of the 'missingClosingCompanyFields' field.
      * @param value The value of 'missingClosingCompanyFields'.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.OfferValidationChecklistMessage.Builder setMissingClosingCompanyFields(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[12], value);
      this.missingClosingCompanyFields = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'missingClosingCompanyFields' field has been set.
      * @return True if the 'missingClosingCompanyFields' field has been set, false otherwise.
      */
    public boolean hasMissingClosingCompanyFields() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'missingClosingCompanyFields' field.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.OfferValidationChecklistMessage.Builder clearMissingClosingCompanyFields() {
      missingClosingCompanyFields = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'mlhSyncError' field.
      * @return The value.
      */
    public java.lang.Boolean getMlhSyncError() {
      return mlhSyncError;
    }


    /**
      * Sets the value of the 'mlhSyncError' field.
      * @param value The value of 'mlhSyncError'.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.OfferValidationChecklistMessage.Builder setMlhSyncError(java.lang.Boolean value) {
      validate(fields()[13], value);
      this.mlhSyncError = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'mlhSyncError' field has been set.
      * @return True if the 'mlhSyncError' field has been set, false otherwise.
      */
    public boolean hasMlhSyncError() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'mlhSyncError' field.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.OfferValidationChecklistMessage.Builder clearMlhSyncError() {
      mlhSyncError = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'contractGenerationError' field.
      * @return The value.
      */
    public java.lang.Boolean getContractGenerationError() {
      return contractGenerationError;
    }


    /**
      * Sets the value of the 'contractGenerationError' field.
      * @param value The value of 'contractGenerationError'.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.OfferValidationChecklistMessage.Builder setContractGenerationError(java.lang.Boolean value) {
      validate(fields()[14], value);
      this.contractGenerationError = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'contractGenerationError' field has been set.
      * @return True if the 'contractGenerationError' field has been set, false otherwise.
      */
    public boolean hasContractGenerationError() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'contractGenerationError' field.
      * @return This builder.
      */
    public com.tenx.resi.ms.contract.api.message.offer.OfferValidationChecklistMessage.Builder clearContractGenerationError() {
      contractGenerationError = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public OfferValidationChecklistMessage build() {
      try {
        OfferValidationChecklistMessage record = new OfferValidationChecklistMessage();
        record.missingDocuments = fieldSetFlags()[0] ? this.missingDocuments : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[0]);
        record.listingAgentInfoMissing = fieldSetFlags()[1] ? this.listingAgentInfoMissing : (java.lang.Boolean) defaultValue(fields()[1]);
        record.freddieMacValidationsFailing = fieldSetFlags()[2] ? this.freddieMacValidationsFailing : (java.lang.Boolean) defaultValue(fields()[2]);
        record.fannieMaeValidationsFailing = fieldSetFlags()[3] ? this.fannieMaeValidationsFailing : (java.lang.Boolean) defaultValue(fields()[3]);
        record.isMoreBuyerInvolved = fieldSetFlags()[4] ? this.isMoreBuyerInvolved : (java.lang.Boolean) defaultValue(fields()[4]);
        record.isMoreEntityInvolved = fieldSetFlags()[5] ? this.isMoreEntityInvolved : (java.lang.Boolean) defaultValue(fields()[5]);
        record.isMoreSignerInvolved = fieldSetFlags()[6] ? this.isMoreSignerInvolved : (java.lang.Boolean) defaultValue(fields()[6]);
        record.isInternationalBuyerInvolved = fieldSetFlags()[7] ? this.isInternationalBuyerInvolved : (java.lang.Boolean) defaultValue(fields()[7]);
        record.agentLicenseFollowup = fieldSetFlags()[8] ? this.agentLicenseFollowup : (java.lang.Boolean) defaultValue(fields()[8]);
        record.legalDescriptionMissing = fieldSetFlags()[9] ? this.legalDescriptionMissing : (java.lang.Boolean) defaultValue(fields()[9]);
        record.isLegacyIntegration = fieldSetFlags()[10] ? this.isLegacyIntegration : (java.lang.Boolean) defaultValue(fields()[10]);
        record.addendumFileSizeLimitExceeded = fieldSetFlags()[11] ? this.addendumFileSizeLimitExceeded : (java.lang.Boolean) defaultValue(fields()[11]);
        record.missingClosingCompanyFields = fieldSetFlags()[12] ? this.missingClosingCompanyFields : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[12]);
        record.mlhSyncError = fieldSetFlags()[13] ? this.mlhSyncError : (java.lang.Boolean) defaultValue(fields()[13]);
        record.contractGenerationError = fieldSetFlags()[14] ? this.contractGenerationError : (java.lang.Boolean) defaultValue(fields()[14]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<OfferValidationChecklistMessage>
    WRITER$ = (org.apache.avro.io.DatumWriter<OfferValidationChecklistMessage>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<OfferValidationChecklistMessage>
    READER$ = (org.apache.avro.io.DatumReader<OfferValidationChecklistMessage>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.missingDocuments == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size0 = this.missingDocuments.size();
      out.writeArrayStart();
      out.setItemCount(size0);
      long actualSize0 = 0;
      for (java.lang.CharSequence e0: this.missingDocuments) {
        actualSize0++;
        out.startItem();
        out.writeString(e0);
      }
      out.writeArrayEnd();
      if (actualSize0 != size0)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");
    }

    if (this.listingAgentInfoMissing == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeBoolean(this.listingAgentInfoMissing);
    }

    if (this.freddieMacValidationsFailing == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeBoolean(this.freddieMacValidationsFailing);
    }

    if (this.fannieMaeValidationsFailing == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeBoolean(this.fannieMaeValidationsFailing);
    }

    if (this.isMoreBuyerInvolved == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeBoolean(this.isMoreBuyerInvolved);
    }

    if (this.isMoreEntityInvolved == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeBoolean(this.isMoreEntityInvolved);
    }

    if (this.isMoreSignerInvolved == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeBoolean(this.isMoreSignerInvolved);
    }

    if (this.isInternationalBuyerInvolved == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeBoolean(this.isInternationalBuyerInvolved);
    }

    if (this.agentLicenseFollowup == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeBoolean(this.agentLicenseFollowup);
    }

    if (this.legalDescriptionMissing == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeBoolean(this.legalDescriptionMissing);
    }

    if (this.isLegacyIntegration == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeBoolean(this.isLegacyIntegration);
    }

    if (this.addendumFileSizeLimitExceeded == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeBoolean(this.addendumFileSizeLimitExceeded);
    }

    if (this.missingClosingCompanyFields == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size1 = this.missingClosingCompanyFields.size();
      out.writeArrayStart();
      out.setItemCount(size1);
      long actualSize1 = 0;
      for (java.lang.CharSequence e1: this.missingClosingCompanyFields) {
        actualSize1++;
        out.startItem();
        out.writeString(e1);
      }
      out.writeArrayEnd();
      if (actualSize1 != size1)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size1 + ", but element count was " + actualSize1 + ".");
    }

    if (this.mlhSyncError == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeBoolean(this.mlhSyncError);
    }

    if (this.contractGenerationError == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeBoolean(this.contractGenerationError);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.missingDocuments = null;
      } else {
        long size0 = in.readArrayStart();
        java.util.List<java.lang.CharSequence> a0 = this.missingDocuments;
        if (a0 == null) {
          a0 = new SpecificData.Array<java.lang.CharSequence>((int)size0, SCHEMA$.getField("missingDocuments").schema().getTypes().get(1));
          this.missingDocuments = a0;
        } else a0.clear();
        SpecificData.Array<java.lang.CharSequence> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.CharSequence>)a0 : null);
        for ( ; 0 < size0; size0 = in.arrayNext()) {
          for ( ; size0 != 0; size0--) {
            java.lang.CharSequence e0 = (ga0 != null ? ga0.peek() : null);
            e0 = in.readString(e0 instanceof Utf8 ? (Utf8)e0 : null);
            a0.add(e0);
          }
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.listingAgentInfoMissing = null;
      } else {
        this.listingAgentInfoMissing = in.readBoolean();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.freddieMacValidationsFailing = null;
      } else {
        this.freddieMacValidationsFailing = in.readBoolean();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.fannieMaeValidationsFailing = null;
      } else {
        this.fannieMaeValidationsFailing = in.readBoolean();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.isMoreBuyerInvolved = null;
      } else {
        this.isMoreBuyerInvolved = in.readBoolean();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.isMoreEntityInvolved = null;
      } else {
        this.isMoreEntityInvolved = in.readBoolean();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.isMoreSignerInvolved = null;
      } else {
        this.isMoreSignerInvolved = in.readBoolean();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.isInternationalBuyerInvolved = null;
      } else {
        this.isInternationalBuyerInvolved = in.readBoolean();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.agentLicenseFollowup = null;
      } else {
        this.agentLicenseFollowup = in.readBoolean();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.legalDescriptionMissing = null;
      } else {
        this.legalDescriptionMissing = in.readBoolean();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.isLegacyIntegration = null;
      } else {
        this.isLegacyIntegration = in.readBoolean();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.addendumFileSizeLimitExceeded = null;
      } else {
        this.addendumFileSizeLimitExceeded = in.readBoolean();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.missingClosingCompanyFields = null;
      } else {
        long size1 = in.readArrayStart();
        java.util.List<java.lang.CharSequence> a1 = this.missingClosingCompanyFields;
        if (a1 == null) {
          a1 = new SpecificData.Array<java.lang.CharSequence>((int)size1, SCHEMA$.getField("missingClosingCompanyFields").schema().getTypes().get(1));
          this.missingClosingCompanyFields = a1;
        } else a1.clear();
        SpecificData.Array<java.lang.CharSequence> ga1 = (a1 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.CharSequence>)a1 : null);
        for ( ; 0 < size1; size1 = in.arrayNext()) {
          for ( ; size1 != 0; size1--) {
            java.lang.CharSequence e1 = (ga1 != null ? ga1.peek() : null);
            e1 = in.readString(e1 instanceof Utf8 ? (Utf8)e1 : null);
            a1.add(e1);
          }
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.mlhSyncError = null;
      } else {
        this.mlhSyncError = in.readBoolean();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.contractGenerationError = null;
      } else {
        this.contractGenerationError = in.readBoolean();
      }

    } else {
      for (int i = 0; i < 15; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.missingDocuments = null;
          } else {
            long size0 = in.readArrayStart();
            java.util.List<java.lang.CharSequence> a0 = this.missingDocuments;
            if (a0 == null) {
              a0 = new SpecificData.Array<java.lang.CharSequence>((int)size0, SCHEMA$.getField("missingDocuments").schema().getTypes().get(1));
              this.missingDocuments = a0;
            } else a0.clear();
            SpecificData.Array<java.lang.CharSequence> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.CharSequence>)a0 : null);
            for ( ; 0 < size0; size0 = in.arrayNext()) {
              for ( ; size0 != 0; size0--) {
                java.lang.CharSequence e0 = (ga0 != null ? ga0.peek() : null);
                e0 = in.readString(e0 instanceof Utf8 ? (Utf8)e0 : null);
                a0.add(e0);
              }
            }
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.listingAgentInfoMissing = null;
          } else {
            this.listingAgentInfoMissing = in.readBoolean();
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.freddieMacValidationsFailing = null;
          } else {
            this.freddieMacValidationsFailing = in.readBoolean();
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.fannieMaeValidationsFailing = null;
          } else {
            this.fannieMaeValidationsFailing = in.readBoolean();
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.isMoreBuyerInvolved = null;
          } else {
            this.isMoreBuyerInvolved = in.readBoolean();
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.isMoreEntityInvolved = null;
          } else {
            this.isMoreEntityInvolved = in.readBoolean();
          }
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.isMoreSignerInvolved = null;
          } else {
            this.isMoreSignerInvolved = in.readBoolean();
          }
          break;

        case 7:
          if (in.readIndex() != 1) {
            in.readNull();
            this.isInternationalBuyerInvolved = null;
          } else {
            this.isInternationalBuyerInvolved = in.readBoolean();
          }
          break;

        case 8:
          if (in.readIndex() != 1) {
            in.readNull();
            this.agentLicenseFollowup = null;
          } else {
            this.agentLicenseFollowup = in.readBoolean();
          }
          break;

        case 9:
          if (in.readIndex() != 1) {
            in.readNull();
            this.legalDescriptionMissing = null;
          } else {
            this.legalDescriptionMissing = in.readBoolean();
          }
          break;

        case 10:
          if (in.readIndex() != 1) {
            in.readNull();
            this.isLegacyIntegration = null;
          } else {
            this.isLegacyIntegration = in.readBoolean();
          }
          break;

        case 11:
          if (in.readIndex() != 1) {
            in.readNull();
            this.addendumFileSizeLimitExceeded = null;
          } else {
            this.addendumFileSizeLimitExceeded = in.readBoolean();
          }
          break;

        case 12:
          if (in.readIndex() != 1) {
            in.readNull();
            this.missingClosingCompanyFields = null;
          } else {
            long size1 = in.readArrayStart();
            java.util.List<java.lang.CharSequence> a1 = this.missingClosingCompanyFields;
            if (a1 == null) {
              a1 = new SpecificData.Array<java.lang.CharSequence>((int)size1, SCHEMA$.getField("missingClosingCompanyFields").schema().getTypes().get(1));
              this.missingClosingCompanyFields = a1;
            } else a1.clear();
            SpecificData.Array<java.lang.CharSequence> ga1 = (a1 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.CharSequence>)a1 : null);
            for ( ; 0 < size1; size1 = in.arrayNext()) {
              for ( ; size1 != 0; size1--) {
                java.lang.CharSequence e1 = (ga1 != null ? ga1.peek() : null);
                e1 = in.readString(e1 instanceof Utf8 ? (Utf8)e1 : null);
                a1.add(e1);
              }
            }
          }
          break;

        case 13:
          if (in.readIndex() != 1) {
            in.readNull();
            this.mlhSyncError = null;
          } else {
            this.mlhSyncError = in.readBoolean();
          }
          break;

        case 14:
          if (in.readIndex() != 1) {
            in.readNull();
            this.contractGenerationError = null;
          } else {
            this.contractGenerationError = in.readBoolean();
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










